
epaper.elf:     file format elf32-littleriscv


Disassembly of section .init:

00000000 <InterruptVector>:
void InterruptVector()         __attribute__((naked)) __attribute((section(".init"))) __attribute((weak,alias("InterruptVectorDefault")));
void InterruptVectorDefault()  __attribute__((naked)) __attribute((section(".init")));

void InterruptVectorDefault()
{
	asm volatile( "\n\
   0:	5b60006f          	j	5b6 <handle_reset>
   4:	0000                	unimp
   6:	0000                	unimp
   8:	062c                	addi	a1,sp,776
   a:	0000                	unimp
   c:	062a                	slli	a2,a2,0xa
	...
  2e:	0000                	unimp
  30:	062a                	slli	a2,a2,0xa
  32:	0000                	unimp
  34:	0000                	unimp
  36:	0000                	unimp
  38:	062a                	slli	a2,a2,0xa
  3a:	0000                	unimp
  3c:	0000                	unimp
  3e:	0000                	unimp
  40:	062a                	slli	a2,a2,0xa
  42:	0000                	unimp
  44:	062a                	slli	a2,a2,0xa
  46:	0000                	unimp
  48:	062a                	slli	a2,a2,0xa
  4a:	0000                	unimp
  4c:	062a                	slli	a2,a2,0xa
  4e:	0000                	unimp
  50:	062a                	slli	a2,a2,0xa
  52:	0000                	unimp
  54:	062a                	slli	a2,a2,0xa
  56:	0000                	unimp
  58:	062a                	slli	a2,a2,0xa
  5a:	0000                	unimp
  5c:	062a                	slli	a2,a2,0xa
  5e:	0000                	unimp
  60:	062a                	slli	a2,a2,0xa
  62:	0000                	unimp
  64:	062a                	slli	a2,a2,0xa
  66:	0000                	unimp
  68:	062a                	slli	a2,a2,0xa
  6a:	0000                	unimp
  6c:	062a                	slli	a2,a2,0xa
  6e:	0000                	unimp
  70:	062a                	slli	a2,a2,0xa
  72:	0000                	unimp
  74:	062a                	slli	a2,a2,0xa
  76:	0000                	unimp
  78:	062a                	slli	a2,a2,0xa
  7a:	0000                	unimp
  7c:	062a                	slli	a2,a2,0xa
  7e:	0000                	unimp
  80:	062a                	slli	a2,a2,0xa
  82:	0000                	unimp
  84:	062a                	slli	a2,a2,0xa
  86:	0000                	unimp
  88:	062a                	slli	a2,a2,0xa
  8a:	0000                	unimp
  8c:	062a                	slli	a2,a2,0xa
  8e:	0000                	unimp
  90:	062a                	slli	a2,a2,0xa
  92:	0000                	unimp
  94:	062a                	slli	a2,a2,0xa
  96:	0000                	unimp
  98:	062a                	slli	a2,a2,0xa
  9a:	0000                	unimp
  9c:	0000                	unimp
	...

Disassembly of section .text:

000000a0 <__divsi3>:
      a0:	02054e63          	bltz	a0,dc <__umodsi3+0x8>
      a4:	0405c363          	bltz	a1,ea <__umodsi3+0x16>

000000a8 <__hidden___udivsi3>:
      a8:	862e                	mv	a2,a1
      aa:	85aa                	mv	a1,a0
      ac:	557d                	li	a0,-1
      ae:	c215                	beqz	a2,d2 <__hidden___udivsi3+0x2a>
      b0:	4685                	li	a3,1
      b2:	00b67863          	bgeu	a2,a1,c2 <__hidden___udivsi3+0x1a>
      b6:	00c05663          	blez	a2,c2 <__hidden___udivsi3+0x1a>
      ba:	0606                	slli	a2,a2,0x1
      bc:	0686                	slli	a3,a3,0x1
      be:	feb66ce3          	bltu	a2,a1,b6 <__hidden___udivsi3+0xe>
      c2:	4501                	li	a0,0
      c4:	00c5e463          	bltu	a1,a2,cc <__hidden___udivsi3+0x24>
      c8:	8d91                	sub	a1,a1,a2
      ca:	8d55                	or	a0,a0,a3
      cc:	8285                	srli	a3,a3,0x1
      ce:	8205                	srli	a2,a2,0x1
      d0:	faf5                	bnez	a3,c4 <__hidden___udivsi3+0x1c>
      d2:	8082                	ret

000000d4 <__umodsi3>:
      d4:	8286                	mv	t0,ra
      d6:	3fc9                	jal	a8 <__hidden___udivsi3>
      d8:	852e                	mv	a0,a1
      da:	8282                	jr	t0
      dc:	40a00533          	neg	a0,a0
      e0:	00b04763          	bgtz	a1,ee <__umodsi3+0x1a>
      e4:	40b005b3          	neg	a1,a1
      e8:	b7c1                	j	a8 <__hidden___udivsi3>
      ea:	40b005b3          	neg	a1,a1
      ee:	8286                	mv	t0,ra
      f0:	3f65                	jal	a8 <__hidden___udivsi3>
      f2:	40a00533          	neg	a0,a0
      f6:	8282                	jr	t0

000000f8 <__modsi3>:
      f8:	8286                	mv	t0,ra
      fa:	0005c763          	bltz	a1,108 <__modsi3+0x10>
      fe:	00054963          	bltz	a0,110 <__modsi3+0x18>
     102:	375d                	jal	a8 <__hidden___udivsi3>
     104:	852e                	mv	a0,a1
     106:	8282                	jr	t0
     108:	40b005b3          	neg	a1,a1
     10c:	fe055be3          	bgez	a0,102 <__modsi3+0xa>
     110:	40a00533          	neg	a0,a0
     114:	3f51                	jal	a8 <__hidden___udivsi3>
     116:	40b00533          	neg	a0,a1
     11a:	8282                	jr	t0
	...

0000011e <mini_pad>:
{
     11e:	1131                	addi	sp,sp,-20
     120:	c426                	sw	s1,8(sp)
     122:	c806                	sw	ra,16(sp)
     124:	c622                	sw	s0,12(sp)
     126:	84ae                	mv	s1,a1
     128:	87aa                	mv	a5,a0
     12a:	85b2                	mv	a1,a2
	int overflow = 0;
     12c:	4301                	li	t1,0
	if(pad_to == 0) pad_to = len;
     12e:	cab5                	beqz	a3,1a2 <mini_pad+0x84>
	if(len > pad_to) {
     130:	0096d463          	bge	a3,s1,138 <mini_pad+0x1a>
     134:	84b6                	mv	s1,a3
		overflow = 1;
     136:	4305                	li	t1,1
	for(i = pad_to - len; i > 0; i --) {
     138:	40968433          	sub	s0,a3,s1
		*(pbuffer++) = pad_char;
     13c:	00045363          	bgez	s0,142 <mini_pad+0x24>
     140:	4401                	li	s0,0
     142:	8622                	mv	a2,s0
     144:	853a                	mv	a0,a4
     146:	c23e                	sw	a5,4(sp)
     148:	c01a                	sw	t1,0(sp)
     14a:	6d6000ef          	jal	ra,820 <memset>
     14e:	4302                	lw	t1,0(sp)
     150:	4792                	lw	a5,4(sp)
     152:	872a                	mv	a4,a0
     154:	008506b3          	add	a3,a0,s0
     158:	4601                	li	a2,0
	for(i = len; i > 0; i --) {
     15a:	40c485b3          	sub	a1,s1,a2
     15e:	04b04463          	bgtz	a1,1a6 <mini_pad+0x88>
     162:	0004d363          	bgez	s1,168 <mini_pad+0x4a>
     166:	4481                	li	s1,0
     168:	00968633          	add	a2,a3,s1
	len = pbuffer - buffer;
     16c:	40e60533          	sub	a0,a2,a4
	if(overflow) {
     170:	02030463          	beqz	t1,198 <mini_pad+0x7a>
		for (i = 0; i < 3 && pbuffer > buffer; i ++) {
     174:	02c77263          	bgeu	a4,a2,198 <mini_pad+0x7a>
			*(pbuffer-- - 1) = '*';
     178:	02a00793          	li	a5,42
     17c:	fef60fa3          	sb	a5,-1(a2)
     180:	fff60693          	addi	a3,a2,-1
		for (i = 0; i < 3 && pbuffer > buffer; i ++) {
     184:	00d77a63          	bgeu	a4,a3,198 <mini_pad+0x7a>
			*(pbuffer-- - 1) = '*';
     188:	fef60f23          	sb	a5,-2(a2)
     18c:	ffe60693          	addi	a3,a2,-2
		for (i = 0; i < 3 && pbuffer > buffer; i ++) {
     190:	00d77463          	bgeu	a4,a3,198 <mini_pad+0x7a>
			*(pbuffer-- - 1) = '*';
     194:	fef60ea3          	sb	a5,-3(a2)
}
     198:	40c2                	lw	ra,16(sp)
     19a:	4432                	lw	s0,12(sp)
     19c:	44a2                	lw	s1,8(sp)
     19e:	0151                	addi	sp,sp,20
     1a0:	8082                	ret
	if(pad_to == 0) pad_to = len;
     1a2:	86a6                	mv	a3,s1
     1a4:	bf51                	j	138 <mini_pad+0x1a>
		*(pbuffer++) = *(ptr++);
     1a6:	00c785b3          	add	a1,a5,a2
     1aa:	0005c503          	lbu	a0,0(a1)
     1ae:	00c685b3          	add	a1,a3,a2
     1b2:	0605                	addi	a2,a2,1
     1b4:	00a58023          	sb	a0,0(a1)
	for(i = len; i > 0; i --) {
     1b8:	b74d                	j	15a <mini_pad+0x3c>

000001ba <DelaySysTick>:
#endif

void DelaySysTick( uint32_t n )
{
#ifdef CH32V003
	uint32_t targend = SysTick->CNT + n;
     1ba:	e000f7b7          	lui	a5,0xe000f
     1be:	479c                	lw	a5,8(a5)
	while( ((int32_t)( SysTick->CNT - targend )) < 0 );
     1c0:	e000f737          	lui	a4,0xe000f
	uint32_t targend = SysTick->CNT + n;
     1c4:	953e                	add	a0,a0,a5
	while( ((int32_t)( SysTick->CNT - targend )) < 0 );
     1c6:	471c                	lw	a5,8(a4)
     1c8:	8f89                	sub	a5,a5,a0
     1ca:	fe07cee3          	bltz	a5,1c6 <DelaySysTick+0xc>
	uint32_t targend = SysTick->CNTL + n;
	while( ((int32_t)( SysTick->CNTL - targend )) < 0 );
#else
	#error DelaySysTick not defined.
#endif
}
     1ce:	8082                	ret

000001d0 <mini_itoa.part.0>:
mini_itoa(long value, unsigned int radix, int uppercase, int unsig,
     1d0:	1101                	addi	sp,sp,-32
     1d2:	ce06                	sw	ra,28(sp)
     1d4:	cc22                	sw	s0,24(sp)
     1d6:	ca26                	sw	s1,20(sp)
	int	negative = 0;
     1d8:	c002                	sw	zero,0(sp)
mini_itoa(long value, unsigned int radix, int uppercase, int unsig,
     1da:	832a                	mv	t1,a0
	if (value < 0 && !unsig) {
     1dc:	00055763          	bgez	a0,1ea <mini_itoa.part.0+0x1a>
     1e0:	e689                	bnez	a3,1ea <mini_itoa.part.0+0x1a>
		negative = 1;
     1e2:	4785                	li	a5,1
		value = -value;
     1e4:	40a00333          	neg	t1,a0
		negative = 1;
     1e8:	c03e                	sw	a5,0(sp)
     1ea:	06100413          	li	s0,97
     1ee:	c219                	beqz	a2,1f4 <mini_itoa.part.0+0x24>
     1f0:	04100413          	li	s0,65
	int	negative = 0;
     1f4:	84ba                	mv	s1,a4
		*(pbuffer++) = (digit < 10 ? '0' + digit : (uppercase ? 'A' : 'a') + digit - 10);
     1f6:	1459                	addi	s0,s0,-10
		int digit = value % radix;
     1f8:	851a                	mv	a0,t1
     1fa:	c83a                	sw	a4,16(sp)
     1fc:	c21a                	sw	t1,4(sp)
     1fe:	c62e                	sw	a1,12(sp)
     200:	c41a                	sw	t1,8(sp)
     202:	3dc9                	jal	d4 <__umodsi3>
		*(pbuffer++) = (digit < 10 ? '0' + digit : (uppercase ? 'A' : 'a') + digit - 10);
     204:	47a5                	li	a5,9
     206:	4322                	lw	t1,8(sp)
     208:	45b2                	lw	a1,12(sp)
     20a:	4742                	lw	a4,16(sp)
     20c:	0ff57693          	andi	a3,a0,255
     210:	06a7e163          	bltu	a5,a0,272 <mini_itoa.part.0+0xa2>
     214:	03068693          	addi	a3,a3,48
     218:	0ff6f693          	andi	a3,a3,255
     21c:	00148793          	addi	a5,s1,1
     220:	00d48023          	sb	a3,0(s1)
		value /= radix;
     224:	851a                	mv	a0,t1
     226:	c83a                	sw	a4,16(sp)
		*(pbuffer++) = (digit < 10 ? '0' + digit : (uppercase ? 'A' : 'a') + digit - 10);
     228:	c63e                	sw	a5,12(sp)
		value /= radix;
     22a:	c42e                	sw	a1,8(sp)
     22c:	3db5                	jal	a8 <__hidden___udivsi3>
	} while (value > 0);
     22e:	4692                	lw	a3,4(sp)
     230:	45a2                	lw	a1,8(sp)
     232:	47b2                	lw	a5,12(sp)
     234:	4742                	lw	a4,16(sp)
		value /= radix;
     236:	832a                	mv	t1,a0
	} while (value > 0);
     238:	02b6fb63          	bgeu	a3,a1,26e <mini_itoa.part.0+0x9e>
	if (negative)
     23c:	4682                	lw	a3,0(sp)
     23e:	c699                	beqz	a3,24c <mini_itoa.part.0+0x7c>
		*(pbuffer++) = '-';
     240:	02d00693          	li	a3,45
     244:	00d78023          	sb	a3,0(a5) # e000f000 <__global_pointer$+0xc000e800>
     248:	00248793          	addi	a5,s1,2
	len = (pbuffer - buffer);
     24c:	40e78533          	sub	a0,a5,a4
	for (i = 0; i < len / 2; i++) {
     250:	01f55693          	srli	a3,a0,0x1f
     254:	96aa                	add	a3,a3,a0
	*(pbuffer) = '\0';
     256:	00078023          	sb	zero,0(a5)
	for (i = 0; i < len / 2; i++) {
     25a:	8685                	srai	a3,a3,0x1
     25c:	4601                	li	a2,0
     25e:	17fd                	addi	a5,a5,-1
     260:	00d64b63          	blt	a2,a3,276 <mini_itoa.part.0+0xa6>
}
     264:	40f2                	lw	ra,28(sp)
     266:	4462                	lw	s0,24(sp)
     268:	44d2                	lw	s1,20(sp)
     26a:	6105                	addi	sp,sp,32
     26c:	8082                	ret
	} while (value > 0);
     26e:	84be                	mv	s1,a5
     270:	b761                	j	1f8 <mini_itoa.part.0+0x28>
		*(pbuffer++) = (digit < 10 ? '0' + digit : (uppercase ? 'A' : 'a') + digit - 10);
     272:	96a2                	add	a3,a3,s0
     274:	b755                	j	218 <mini_itoa.part.0+0x48>
		char j = buffer[i];
     276:	00c705b3          	add	a1,a4,a2
		buffer[i] = buffer[len-i-1];
     27a:	0007c283          	lbu	t0,0(a5)
		char j = buffer[i];
     27e:	0005c303          	lbu	t1,0(a1)
	for (i = 0; i < len / 2; i++) {
     282:	0605                	addi	a2,a2,1
		buffer[i] = buffer[len-i-1];
     284:	00558023          	sb	t0,0(a1)
		buffer[len-i-1] = j;
     288:	00678023          	sb	t1,0(a5)
	for (i = 0; i < len / 2; i++) {
     28c:	bfc9                	j	25e <mini_itoa.part.0+0x8e>

0000028e <epd_wait_busy>:
	SPI1->CTLR1 |= CTLR1_SPE_Set;
}

// Wait display controller not busy
uint8_t epd_wait_busy()
{
     28e:	1151                	addi	sp,sp,-12
     290:	c222                	sw	s0,4(sp)
     292:	6429                	lui	s0,0xa
     294:	c406                	sw	ra,8(sp)
     296:	c4140413          	addi	s0,s0,-959 # 9c41 <epaper.c.a43bb547+0x7437>
  uint32_t timeout = 0;
  while (EPAPER_BUSY()) {
     29a:	400117b7          	lui	a5,0x40011
     29e:	80078793          	addi	a5,a5,-2048 # 40010800 <__global_pointer$+0x20010000>
     2a2:	479c                	lw	a5,8(a5)
     2a4:	8b89                	andi	a5,a5,2
     2a6:	e791                	bnez	a5,2b2 <epd_wait_busy+0x24>
    if (timeout > 40000) {
      return TRUE;
    }
    Delay_Ms(1);
  }
  return FALSE;
     2a8:	4501                	li	a0,0
}
     2aa:	40a2                	lw	ra,8(sp)
     2ac:	4412                	lw	s0,4(sp)
     2ae:	0131                	addi	sp,sp,12
     2b0:	8082                	ret
    if (timeout > 40000) {
     2b2:	147d                	addi	s0,s0,-1
     2b4:	c411                	beqz	s0,2c0 <epd_wait_busy+0x32>
    Delay_Ms(1);
     2b6:	6505                	lui	a0,0x1
     2b8:	77050513          	addi	a0,a0,1904 # 1770 <_data_lma+0x44>
     2bc:	3dfd                	jal	1ba <DelaySysTick>
     2be:	bff1                	j	29a <epd_wait_busy+0xc>
      return TRUE;
     2c0:	4505                	li	a0,1
     2c2:	b7e5                	j	2aa <epd_wait_busy+0x1c>

000002c4 <epd_write_cmd>:

void epd_write_cmd(uint8_t cmd)
{
	EPAPER_DC_LOW();
     2c4:	400117b7          	lui	a5,0x40011
     2c8:	00100737          	lui	a4,0x100
     2cc:	cb98                	sw	a4,16(a5)
	EPAPER_CS_LOW();
     2ce:	00080737          	lui	a4,0x80
     2d2:	cb98                	sw	a4,16(a5)

	while(!(SPI1->STATR & SPI_STATR_TXE))
     2d4:	40013737          	lui	a4,0x40013
     2d8:	00875783          	lhu	a5,8(a4) # 40013008 <__global_pointer$+0x20012808>
     2dc:	8b89                	andi	a5,a5,2
     2de:	dfed                	beqz	a5,2d8 <epd_write_cmd+0x14>
		;
	SPI1->DATAR = cmd;
     2e0:	0542                	slli	a0,a0,0x10
     2e2:	8141                	srli	a0,a0,0x10
     2e4:	00a71623          	sh	a0,12(a4)
	while(SPI1->STATR & SPI_STATR_BSY)
     2e8:	40013737          	lui	a4,0x40013
     2ec:	00875783          	lhu	a5,8(a4) # 40013008 <__global_pointer$+0x20012808>
     2f0:	0807f793          	andi	a5,a5,128
     2f4:	ffe5                	bnez	a5,2ec <epd_write_cmd+0x28>
		;

	EPAPER_DC_HIGH();
     2f6:	400117b7          	lui	a5,0x40011
     2fa:	4741                	li	a4,16
     2fc:	cb98                	sw	a4,16(a5)
	EPAPER_CS_HIGH();
     2fe:	4721                	li	a4,8
     300:	cb98                	sw	a4,16(a5)
}
     302:	8082                	ret

00000304 <epd_write_data>:

void epd_write_data(uint8_t data)
{
	EPAPER_CS_LOW();
     304:	00080737          	lui	a4,0x80
     308:	400117b7          	lui	a5,0x40011
     30c:	cb98                	sw	a4,16(a5)

	while(!(SPI1->STATR & SPI_STATR_TXE))
     30e:	40013737          	lui	a4,0x40013
     312:	00875783          	lhu	a5,8(a4) # 40013008 <__global_pointer$+0x20012808>
     316:	8b89                	andi	a5,a5,2
     318:	dfed                	beqz	a5,312 <epd_write_data+0xe>
		;
	SPI1->DATAR = data;
     31a:	0542                	slli	a0,a0,0x10
     31c:	8141                	srli	a0,a0,0x10
     31e:	00a71623          	sh	a0,12(a4)
	while(SPI1->STATR & SPI_STATR_BSY)
     322:	40013737          	lui	a4,0x40013
     326:	00875783          	lhu	a5,8(a4) # 40013008 <__global_pointer$+0x20012808>
     32a:	0807f793          	andi	a5,a5,128
     32e:	ffe5                	bnez	a5,326 <epd_write_data+0x22>
		;

	EPAPER_CS_HIGH();
     330:	400117b7          	lui	a5,0x40011
     334:	4721                	li	a4,8
     336:	cb98                	sw	a4,16(a5)
}
     338:	8082                	ret

0000033a <epd_send_screen>:
	}
}


// Send the graphic screen data
void epd_send_screen () {
     33a:	1171                	addi	sp,sp,-4
	EPAPER_CS_LOW();
     33c:	400117b7          	lui	a5,0x40011
void epd_send_screen () {
     340:	c022                	sw	s0,0(sp)
	EPAPER_CS_LOW();
     342:	00080737          	lui	a4,0x80
     346:	cb98                	sw	a4,16(a5)
	for (int l = 0; l < NLIN; l++) {
     348:	80818793          	addi	a5,gp,-2040 # 20000008 <screen>
			uint8_t *ps = screen + l*NCOL;
			for (int c = 0; c < NCOL; c++) {
				const uint8_t *p = &fontdata[(*ps++ << 3)+lg];
				while(!(SPI1->STATR & SPI_STATR_TXE))
					;
				SPI1->DATAR = ~(*p++);
     34c:	6585                	lui	a1,0x1
     34e:	27178313          	addi	t1,a5,625 # 40011271 <__global_pointer$+0x20010a71>
				while(!(SPI1->STATR & SPI_STATR_TXE))
     352:	40013537          	lui	a0,0x40013
				SPI1->DATAR = ~(*p++);
     356:	f2c58593          	addi	a1,a1,-212 # f2c <fontdata>
			for (int c = 0; c < NCOL; c++) {
     35a:	42e5                	li	t0,25
		for (int lg = 0; lg < 8; lg++) {
     35c:	43a1                	li	t2,8
     35e:	4681                	li	a3,0
			for (int c = 0; c < NCOL; c++) {
     360:	4601                	li	a2,0
				const uint8_t *p = &fontdata[(*ps++ << 3)+lg];
     362:	00c78733          	add	a4,a5,a2
     366:	00074703          	lbu	a4,0(a4) # 80000 <epaper.c.a43bb547+0x7d7f6>
     36a:	070e                	slli	a4,a4,0x3
     36c:	9736                	add	a4,a4,a3
				while(!(SPI1->STATR & SPI_STATR_TXE))
     36e:	00855403          	lhu	s0,8(a0) # 40013008 <__global_pointer$+0x20012808>
     372:	8809                	andi	s0,s0,2
     374:	dc6d                	beqz	s0,36e <epd_send_screen+0x34>
				SPI1->DATAR = ~(*p++);
     376:	972e                	add	a4,a4,a1
     378:	00074703          	lbu	a4,0(a4)
			for (int c = 0; c < NCOL; c++) {
     37c:	0605                	addi	a2,a2,1
				SPI1->DATAR = ~(*p++);
     37e:	fff74713          	not	a4,a4
     382:	0742                	slli	a4,a4,0x10
     384:	8341                	srli	a4,a4,0x10
     386:	00e51623          	sh	a4,12(a0)
			for (int c = 0; c < NCOL; c++) {
     38a:	fc561ce3          	bne	a2,t0,362 <epd_send_screen+0x28>
		for (int lg = 0; lg < 8; lg++) {
     38e:	0685                	addi	a3,a3,1
     390:	fc7698e3          	bne	a3,t2,360 <epd_send_screen+0x26>
	for (int l = 0; l < NLIN; l++) {
     394:	07e5                	addi	a5,a5,25
     396:	fcf314e3          	bne	t1,a5,35e <epd_send_screen+0x24>
			}
		}
	}
	while(SPI1->STATR & SPI_STATR_BSY)
     39a:	40013737          	lui	a4,0x40013
     39e:	00875783          	lhu	a5,8(a4) # 40013008 <__global_pointer$+0x20012808>
     3a2:	0807f793          	andi	a5,a5,128
     3a6:	ffe5                	bnez	a5,39e <epd_send_screen+0x64>
		;
	EPAPER_CS_HIGH();
}
     3a8:	4402                	lw	s0,0(sp)
	EPAPER_CS_HIGH();
     3aa:	400117b7          	lui	a5,0x40011
     3ae:	4721                	li	a4,8
     3b0:	cb98                	sw	a4,16(a5)
}
     3b2:	0111                	addi	sp,sp,4
     3b4:	8082                	ret

000003b6 <epd_setpos.constprop.0>:
void epd_setpos(uint16_t x, uint16_t y)
     3b6:	1151                	addi	sp,sp,-12
	epd_write_cmd(CMD_SET_RAM_XADDR_COUNT);
     3b8:	04e00513          	li	a0,78
void epd_setpos(uint16_t x, uint16_t y)
     3bc:	c406                	sw	ra,8(sp)
	epd_write_cmd(CMD_SET_RAM_XADDR_COUNT);
     3be:	3719                	jal	2c4 <epd_write_cmd>
	epd_write_data(_x);
     3c0:	4501                	li	a0,0
     3c2:	3789                	jal	304 <epd_write_data>
	epd_write_cmd(CMD_SET_RAM_YADDR_COUNT);
     3c4:	04f00513          	li	a0,79
     3c8:	3df5                	jal	2c4 <epd_write_cmd>
	epd_write_data(_y & 0xff);
     3ca:	0c700513          	li	a0,199
     3ce:	3f1d                	jal	304 <epd_write_data>
}
     3d0:	40a2                	lw	ra,8(sp)
	epd_write_data((_y >> 8) & 0x01);
     3d2:	4501                	li	a0,0
}
     3d4:	0131                	addi	sp,sp,12
	epd_write_data((_y >> 8) & 0x01);
     3d6:	b73d                	j	304 <epd_write_data>

000003d8 <epd_refresh>:

// Update image on the display
void epd_refresh() {
     3d8:	1151                	addi	sp,sp,-12
     3da:	c222                	sw	s0,4(sp)
	// Turnon if necessary
	if (hibernating) {
     3dc:	20000437          	lui	s0,0x20000
     3e0:	00040413          	mv	s0,s0
     3e4:	00044783          	lbu	a5,0(s0) # 20000000 <hibernating>
void epd_refresh() {
     3e8:	c406                	sw	ra,8(sp)
     3ea:	c026                	sw	s1,0(sp)
	if (hibernating) {
     3ec:	0a078563          	beqz	a5,496 <epd_refresh+0xbe>
	EPAPER_RST_LOW();
     3f0:	400117b7          	lui	a5,0x40011
     3f4:	00040737          	lui	a4,0x40
	Delay_Ms(50);
     3f8:	000494b7          	lui	s1,0x49
	EPAPER_RST_LOW();
     3fc:	cb98                	sw	a4,16(a5)
	Delay_Ms(50);
     3fe:	3e048513          	addi	a0,s1,992 # 493e0 <epaper.c.a43bb547+0x46bd6>
     402:	3b65                	jal	1ba <DelaySysTick>
	EPAPER_RST_HIGH();
     404:	4711                	li	a4,4
     406:	400117b7          	lui	a5,0x40011
     40a:	cb98                	sw	a4,16(a5)
	Delay_Ms(50);
     40c:	3e048513          	addi	a0,s1,992
     410:	336d                	jal	1ba <DelaySysTick>
	hibernating = FALSE;
     412:	00040023          	sb	zero,0(s0)
	if (epd_wait_busy()) {
     416:	3da5                	jal	28e <epd_wait_busy>
     418:	06051f63          	bnez	a0,496 <epd_refresh+0xbe>
	epd_write_cmd(CMD_SWRESET);
     41c:	4549                	li	a0,18
     41e:	355d                	jal	2c4 <epd_write_cmd>
	Delay_Ms(10);
     420:	653d                	lui	a0,0xf
     422:	a6050513          	addi	a0,a0,-1440 # ea60 <epaper.c.a43bb547+0xc256>
     426:	3b51                	jal	1ba <DelaySysTick>
	if (epd_wait_busy()) {
     428:	359d                	jal	28e <epd_wait_busy>
     42a:	e535                	bnez	a0,496 <epd_refresh+0xbe>
	epd_write_cmd(CMD_DRV_OUT_CTRL);
     42c:	4505                	li	a0,1
     42e:	3d59                	jal	2c4 <epd_write_cmd>
	epd_write_data(0xC7);
     430:	0c700513          	li	a0,199
     434:	3dc1                	jal	304 <epd_write_data>
	epd_write_data(0x00);
     436:	4501                	li	a0,0
     438:	35f1                	jal	304 <epd_write_data>
	epd_write_data(0x01);
     43a:	4505                	li	a0,1
     43c:	35e1                	jal	304 <epd_write_data>
	epd_write_cmd(CMD_DATA_ENTRY_MODE);
     43e:	4545                	li	a0,17
     440:	3551                	jal	2c4 <epd_write_cmd>
	epd_write_data(0x01);
     442:	4505                	li	a0,1
     444:	35c1                	jal	304 <epd_write_data>
	epd_write_cmd(CMD_SET_RAM_XADDR);
     446:	04400513          	li	a0,68
     44a:	3dad                	jal	2c4 <epd_write_cmd>
	epd_write_data(0x00);
     44c:	4501                	li	a0,0
     44e:	3d5d                	jal	304 <epd_write_data>
	epd_write_data(0x18);
     450:	4561                	li	a0,24
     452:	3d4d                	jal	304 <epd_write_data>
	epd_write_cmd(CMD_SET_RAM_YADDR);
     454:	04500513          	li	a0,69
     458:	35b5                	jal	2c4 <epd_write_cmd>
	epd_write_data(0xC7);
     45a:	0c700513          	li	a0,199
     45e:	355d                	jal	304 <epd_write_data>
	epd_write_data(0x00);
     460:	4501                	li	a0,0
     462:	354d                	jal	304 <epd_write_data>
	epd_write_data(0x00);
     464:	4501                	li	a0,0
     466:	3d79                	jal	304 <epd_write_data>
	epd_write_data(0x00);
     468:	4501                	li	a0,0
     46a:	3d69                	jal	304 <epd_write_data>
	epd_write_cmd(CMD_BORDER_WAVE);
     46c:	03c00513          	li	a0,60
     470:	3d91                	jal	2c4 <epd_write_cmd>
	epd_write_data(0x05);
     472:	4515                	li	a0,5
     474:	3d41                	jal	304 <epd_write_data>
	epd_write_cmd(CMD_READ_TEMPERATURE);
     476:	4561                	li	a0,24
     478:	35b1                	jal	2c4 <epd_write_cmd>
	epd_write_data(0x80);
     47a:	08000513          	li	a0,128
     47e:	3559                	jal	304 <epd_write_data>
	epd_setpos(0,0);
     480:	3f1d                	jal	3b6 <epd_setpos.constprop.0>
	epd_write_cmd(CMD_DISP_UPD_CTL);
     482:	02200513          	li	a0,34
     486:	3d3d                	jal	2c4 <epd_write_cmd>
	epd_write_data(0xf8);
     488:	0f800513          	li	a0,248
     48c:	3da5                	jal	304 <epd_write_data>
	epd_write_cmd(CMD_ACTIVE_DISP_UPD_SEQ);
     48e:	02000513          	li	a0,32
     492:	3d0d                	jal	2c4 <epd_write_cmd>
	return epd_wait_busy();
     494:	3bed                	jal	28e <epd_wait_busy>
		epd_init();
	}

	// Fill RED RAM
	epd_setpos(0, 0);
     496:	3705                	jal	3b6 <epd_setpos.constprop.0>
	epd_write_cmd(CMD_WRITE_REDRAM);
     498:	02600513          	li	a0,38
     49c:	3525                	jal	2c4 <epd_write_cmd>
	epd_send_screen();
     49e:	3d71                	jal	33a <epd_send_screen>

	// Fill BW RAM
	epd_setpos(0, 0);
     4a0:	3f19                	jal	3b6 <epd_setpos.constprop.0>
	epd_write_cmd(CMD_WRITE_RAM);
     4a2:	02400513          	li	a0,36
     4a6:	3d39                	jal	2c4 <epd_write_cmd>
	epd_send_screen();
     4a8:	3d49                	jal	33a <epd_send_screen>

	// Update the display
	epd_write_cmd(CMD_DISP_UPD_CTL);
     4aa:	02200513          	li	a0,34
     4ae:	3d19                	jal	2c4 <epd_write_cmd>
	epd_write_data(0xF4);
     4b0:	0f400513          	li	a0,244
     4b4:	3d81                	jal	304 <epd_write_data>
	epd_write_cmd(CMD_ACTIVE_DISP_UPD_SEQ);
     4b6:	02000513          	li	a0,32
     4ba:	3529                	jal	2c4 <epd_write_cmd>

	epd_wait_busy();
}
     4bc:	4412                	lw	s0,4(sp)
     4be:	40a2                	lw	ra,8(sp)
     4c0:	4482                	lw	s1,0(sp)
     4c2:	0131                	addi	sp,sp,12
	epd_wait_busy();
     4c4:	b3e9                	j	28e <epd_wait_busy>

000004c6 <internal_handle_input.constprop.0>:
	uint32_t dmd0 = *dmdata0;
     4c6:	e00007b7          	lui	a5,0xe0000
     4ca:	0f47a783          	lw	a5,244(a5) # e00000f4 <__global_pointer$+0xbffff8f4>
}
     4ce:	8082                	ret

000004d0 <_write.constprop.0>:
int _write(int fd, const char *buf, int size)
     4d0:	1111                	addi	sp,sp,-28
     4d2:	ca22                	sw	s0,20(sp)
     4d4:	cc06                	sw	ra,24(sp)
     4d6:	c826                	sw	s1,16(sp)
     4d8:	c02a                	sw	a0,0(sp)
	char buffer[4] = { 0 };
     4da:	c602                	sw	zero,12(sp)
int _write(int fd, const char *buf, int size)
     4dc:	842e                	mv	s0,a1
	if( size == 0 )
     4de:	e1e1                	bnez	a1,59e <_write.constprop.0+0xce>
		lastdmd = (*DMDATA0);
     4e0:	e00007b7          	lui	a5,0xe0000
     4e4:	0f47a783          	lw	a5,244(a5) # e00000f4 <__global_pointer$+0xbffff8f4>
		if( lastdmd && !(lastdmd&0x80) ) internal_handle_input( (uint32_t*)DMDATA0 );
     4e8:	c789                	beqz	a5,4f2 <_write.constprop.0+0x22>
     4ea:	0807f793          	andi	a5,a5,128
     4ee:	e391                	bnez	a5,4f2 <_write.constprop.0+0x22>
     4f0:	3fd9                	jal	4c6 <internal_handle_input.constprop.0>
	if( size == 0 )
     4f2:	84a2                	mv	s1,s0
     4f4:	a879                	j	592 <_write.constprop.0+0xc2>
		int tosend = size - place;
     4f6:	409405b3          	sub	a1,s0,s1
     4fa:	469d                	li	a3,7
     4fc:	872e                	mv	a4,a1
     4fe:	00b6d363          	bge	a3,a1,504 <_write.constprop.0+0x34>
     502:	471d                	li	a4,7
     504:	000276b7          	lui	a3,0x27
     508:	10168693          	addi	a3,a3,257 # 27101 <epaper.c.a43bb547+0x248f7>
		while( ( lastdmd = (*DMDATA0) ) & 0x80 )
     50c:	e0000337          	lui	t1,0xe0000
     510:	0f432603          	lw	a2,244(t1) # e00000f4 <__global_pointer$+0xbffff8f4>
     514:	08067513          	andi	a0,a2,128
     518:	e93d                	bnez	a0,58e <_write.constprop.0+0xbe>
		if( lastdmd ) internal_handle_input( (uint32_t*)DMDATA0 );
     51a:	c611                	beqz	a2,526 <_write.constprop.0+0x56>
     51c:	c43a                	sw	a4,8(sp)
     51e:	c22e                	sw	a1,4(sp)
     520:	375d                	jal	4c6 <internal_handle_input.constprop.0>
     522:	4722                	lw	a4,8(sp)
     524:	4592                	lw	a1,4(sp)
			buffer[t-3] = buf[t+place];
     526:	4689                	li	a3,2
     528:	4601                	li	a2,0
     52a:	00b6d463          	bge	a3,a1,532 <_write.constprop.0+0x62>
     52e:	ffd70613          	addi	a2,a4,-3 # 3fffd <epaper.c.a43bb547+0x3d7f3>
     532:	4782                	lw	a5,0(sp)
     534:	00348593          	addi	a1,s1,3
     538:	0068                	addi	a0,sp,12
     53a:	95be                	add	a1,a1,a5
     53c:	c23a                	sw	a4,4(sp)
     53e:	2609                	jal	840 <memcpy>
		*DMDATA1 = *(uint32_t*)&(buffer[0]);
     540:	4632                	lw	a2,12(sp)
     542:	4782                	lw	a5,0(sp)
		while( t < tosend && t < 3 )
     544:	4712                	lw	a4,4(sp)
		*DMDATA1 = *(uint32_t*)&(buffer[0]);
     546:	e00006b7          	lui	a3,0xe0000
     54a:	0ec6ac23          	sw	a2,248(a3) # e00000f8 <__global_pointer$+0xbffff8f8>
		while( t < tosend && t < 3 )
     54e:	458d                	li	a1,3
     550:	00978633          	add	a2,a5,s1
		t = 0;
     554:	4681                	li	a3,0
			buffer[t+1] = buf[t+place];
     556:	00064303          	lbu	t1,0(a2)
     55a:	0685                	addi	a3,a3,1
     55c:	007c                	addi	a5,sp,12
     55e:	00d78533          	add	a0,a5,a3
     562:	00650023          	sb	t1,0(a0)
		while( t < tosend && t < 3 )
     566:	00d70563          	beq	a4,a3,570 <_write.constprop.0+0xa0>
     56a:	0605                	addi	a2,a2,1
     56c:	feb695e3          	bne	a3,a1,556 <_write.constprop.0+0x86>
		buffer[0] = 0x80 | (tosend + 4);
     570:	00470693          	addi	a3,a4,4
     574:	f806e693          	ori	a3,a3,-128
     578:	00d10623          	sb	a3,12(sp)
		*DMDATA0 = *(uint32_t*)&(buffer[0]);
     57c:	4632                	lw	a2,12(sp)
     57e:	e00006b7          	lui	a3,0xe0000
		place += tosend;
     582:	94ba                	add	s1,s1,a4
		*DMDATA0 = *(uint32_t*)&(buffer[0]);
     584:	0ec6aa23          	sw	a2,244(a3) # e00000f4 <__global_pointer$+0xbffff8f4>
	while( place < size )
     588:	f684c7e3          	blt	s1,s0,4f6 <_write.constprop.0+0x26>
     58c:	b79d                	j	4f2 <_write.constprop.0+0x22>
			if( timeout-- == 0 ) return place;
     58e:	16fd                	addi	a3,a3,-1
     590:	f2c1                	bnez	a3,510 <_write.constprop.0+0x40>
}
     592:	40e2                	lw	ra,24(sp)
     594:	4452                	lw	s0,20(sp)
     596:	8526                	mv	a0,s1
     598:	44c2                	lw	s1,16(sp)
     59a:	0171                	addi	sp,sp,28
     59c:	8082                	ret
	if( size == 0 )
     59e:	4481                	li	s1,0
     5a0:	b7e5                	j	588 <_write.constprop.0+0xb8>

000005a2 <__puts_uart>:
{
     5a2:	1151                	addi	sp,sp,-12
     5a4:	c222                	sw	s0,4(sp)
     5a6:	c406                	sw	ra,8(sp)
     5a8:	842e                	mv	s0,a1
	_write( 0, s, len );
     5aa:	371d                	jal	4d0 <_write.constprop.0>
}
     5ac:	40a2                	lw	ra,8(sp)
     5ae:	8522                	mv	a0,s0
     5b0:	4412                	lw	s0,4(sp)
     5b2:	0131                	addi	sp,sp,12
     5b4:	8082                	ret

000005b6 <handle_reset>:
	asm volatile( "\n\
     5b6:	20000197          	auipc	gp,0x20000
     5ba:	24a18193          	addi	gp,gp,586 # 20000800 <__global_pointer$>
     5be:	00018113          	mv	sp,gp
     5c2:	08000513          	li	a0,128
     5c6:	30051073          	csrw	mstatus,a0
     5ca:	468d                	li	a3,3
     5cc:	00000517          	auipc	a0,0x0
     5d0:	a3450513          	addi	a0,a0,-1484 # 0 <InterruptVector>
     5d4:	8d55                	or	a0,a0,a3
     5d6:	30551073          	csrw	mtvec,a0
asm volatile(
     5da:	80818513          	addi	a0,gp,-2040 # 20000008 <screen>
     5de:	a7c18593          	addi	a1,gp,-1412 # 2000027c <_ebss>
     5e2:	4601                	li	a2,0
     5e4:	00b55663          	bge	a0,a1,5f0 <handle_reset+0x3a>
     5e8:	c110                	sw	a2,0(a0)
     5ea:	0511                	addi	a0,a0,4
     5ec:	feb54ee3          	blt	a0,a1,5e8 <handle_reset+0x32>
     5f0:	00001517          	auipc	a0,0x1
     5f4:	13c50513          	addi	a0,a0,316 # 172c <_data_lma>
     5f8:	20000597          	auipc	a1,0x20000
     5fc:	a0858593          	addi	a1,a1,-1528 # 20000000 <hibernating>
     600:	80818613          	addi	a2,gp,-2040 # 20000008 <screen>
     604:	00c58863          	beq	a1,a2,614 <handle_reset+0x5e>
     608:	4114                	lw	a3,0(a0)
     60a:	c194                	sw	a3,0(a1)
     60c:	0511                	addi	a0,a0,4
     60e:	0591                	addi	a1,a1,4
     610:	fec59ae3          	bne	a1,a2,604 <handle_reset+0x4e>
	SysTick->CTLR = 1;
     614:	e000f7b7          	lui	a5,0xe000f
     618:	4705                	li	a4,1
     61a:	c398                	sw	a4,0(a5)
asm volatile(
     61c:	6785                	lui	a5,0x1
     61e:	8e878793          	addi	a5,a5,-1816 # 8e8 <main>
     622:	34179073          	csrw	mepc,a5
     626:	30200073          	mret

0000062a <ADC1_IRQHandler>:
	asm volatile( "1: j 1b" );
     62a:	a001                	j	62a <ADC1_IRQHandler>

0000062c <NMI_Handler>:
	RCC->INTR |= RCC_CSSC;	// clear the clock security int flag
     62c:	40021737          	lui	a4,0x40021
     630:	471c                	lw	a5,8(a4)
     632:	008006b7          	lui	a3,0x800
     636:	8fd5                	or	a5,a5,a3
     638:	c71c                	sw	a5,8(a4)

0000063a <strlen>:
size_t strlen(const char *s) { const char *a = s;for (; *s; s++);return s-a; }
     63a:	87aa                	mv	a5,a0
     63c:	0007c703          	lbu	a4,0(a5)
     640:	e701                	bnez	a4,648 <strlen+0xe>
     642:	40a78533          	sub	a0,a5,a0
     646:	8082                	ret
     648:	0785                	addi	a5,a5,1
     64a:	bfcd                	j	63c <strlen+0x2>

0000064c <mini_vpprintf>:
{
     64c:	fa410113          	addi	sp,sp,-92
     650:	c8a6                	sw	s1,80(sp)
     652:	cc86                	sw	ra,88(sp)
     654:	caa2                	sw	s0,84(sp)
     656:	c02a                	sw	a0,0(sp)
     658:	c22e                	sw	a1,4(sp)
     65a:	84b2                	mv	s1,a2
     65c:	87b6                	mv	a5,a3
	int n = 0;
     65e:	c802                	sw	zero,16(sp)
	while ((ch=*(fmt++))) {
     660:	0004c703          	lbu	a4,0(s1)
     664:	00148413          	addi	s0,s1,1
     668:	00e10fa3          	sb	a4,31(sp)
     66c:	eb01                	bnez	a4,67c <mini_vpprintf+0x30>
}
     66e:	40e6                	lw	ra,88(sp)
     670:	4456                	lw	s0,84(sp)
     672:	4542                	lw	a0,16(sp)
     674:	44c6                	lw	s1,80(sp)
     676:	05c10113          	addi	sp,sp,92
     67a:	8082                	ret
		if (ch!='%') {
     67c:	02500693          	li	a3,37
     680:	00d70f63          	beq	a4,a3,69e <mini_vpprintf+0x52>
     684:	c43e                	sw	a5,8(sp)
			len = puts(&ch, len, buf);
     686:	4612                	lw	a2,4(sp)
     688:	4782                	lw	a5,0(sp)
     68a:	4585                	li	a1,1
     68c:	01f10513          	addi	a0,sp,31
     690:	9782                	jalr	a5
	while ((ch=*(fmt++))) {
     692:	84a2                	mv	s1,s0
		n = n + len;
     694:	47c2                	lw	a5,16(sp)
     696:	97aa                	add	a5,a5,a0
     698:	c83e                	sw	a5,16(sp)
     69a:	47a2                	lw	a5,8(sp)
     69c:	b7d1                	j	660 <mini_vpprintf+0x14>
			ch=*(fmt++);
     69e:	0014c683          	lbu	a3,1(s1)
			if (ch == '0') pad_char = '0';
     6a2:	03000613          	li	a2,48
			ch=*(fmt++);
     6a6:	00248713          	addi	a4,s1,2
     6aa:	00d10fa3          	sb	a3,31(sp)
			if (ch == '0') pad_char = '0';
     6ae:	03000413          	li	s0,48
     6b2:	08c69063          	bne	a3,a2,732 <mini_vpprintf+0xe6>
				ch=*(fmt++);
     6b6:	84ba                	mv	s1,a4
     6b8:	4601                	li	a2,0
     6ba:	4701                	li	a4,0
			while (ch >= '0' && ch <= '9') {
     6bc:	4525                	li	a0,9
     6be:	a811                	j	6d2 <mini_vpprintf+0x86>
				pad_to = pad_to * 10 + (ch - '0');
     6c0:	00271693          	slli	a3,a4,0x2
				ch=*(fmt++);
     6c4:	0485                	addi	s1,s1,1
				pad_to = pad_to * 10 + (ch - '0');
     6c6:	9736                	add	a4,a4,a3
				ch=*(fmt++);
     6c8:	fff4c683          	lbu	a3,-1(s1)
				pad_to = pad_to * 10 + (ch - '0');
     6cc:	0706                	slli	a4,a4,0x1
     6ce:	972e                	add	a4,a4,a1
				ch=*(fmt++);
     6d0:	4605                	li	a2,1
			while (ch >= '0' && ch <= '9') {
     6d2:	fd068593          	addi	a1,a3,-48 # 7fffd0 <epaper.c.a43bb547+0x7fd7c6>
     6d6:	0ff5f313          	andi	t1,a1,255
     6da:	fe6573e3          	bgeu	a0,t1,6c0 <mini_vpprintf+0x74>
     6de:	c219                	beqz	a2,6e4 <mini_vpprintf+0x98>
     6e0:	00d10fa3          	sb	a3,31(sp)
			if(pad_to > (signed int) sizeof(bf)) {
     6e4:	c63a                	sw	a4,12(sp)
     6e6:	4661                	li	a2,24
     6e8:	00e65363          	bge	a2,a4,6ee <mini_vpprintf+0xa2>
     6ec:	c632                	sw	a2,12(sp)
			if (ch == 'l') {
     6ee:	06c00593          	li	a1,108
			char l = 0;
     6f2:	4601                	li	a2,0
			if (ch == 'l') {
     6f4:	00b69863          	bne	a3,a1,704 <mini_vpprintf+0xb8>
				ch=*(fmt++);
     6f8:	0004c683          	lbu	a3,0(s1)
				l = 1;
     6fc:	4605                	li	a2,1
				ch=*(fmt++);
     6fe:	0485                	addi	s1,s1,1
     700:	00d10fa3          	sb	a3,31(sp)
			switch (ch) {
     704:	01f14683          	lbu	a3,31(sp)
     708:	06400593          	li	a1,100
     70c:	06b68363          	beq	a3,a1,772 <mini_vpprintf+0x126>
     710:	02d5e463          	bltu	a1,a3,738 <mini_vpprintf+0xec>
     714:	05800713          	li	a4,88
     718:	0ae68063          	beq	a3,a4,7b8 <mini_vpprintf+0x16c>
     71c:	06300713          	li	a4,99
     720:	0ae68d63          	beq	a3,a4,7da <mini_vpprintf+0x18e>
     724:	d6a9                	beqz	a3,66e <mini_vpprintf+0x22>
					len = puts(&ch, len, buf);
     726:	4612                	lw	a2,4(sp)
     728:	c43e                	sw	a5,8(sp)
     72a:	4585                	li	a1,1
     72c:	01f10513          	addi	a0,sp,31
     730:	a0bd                	j	79e <mini_vpprintf+0x152>
			char pad_char = ' ';
     732:	02000413          	li	s0,32
     736:	b741                	j	6b6 <mini_vpprintf+0x6a>
			switch (ch) {
     738:	07500593          	li	a1,117
     73c:	02b68b63          	beq	a3,a1,772 <mini_vpprintf+0x126>
     740:	07800613          	li	a2,120
     744:	06c68a63          	beq	a3,a2,7b8 <mini_vpprintf+0x16c>
     748:	07300613          	li	a2,115
     74c:	fcc69de3          	bne	a3,a2,726 <mini_vpprintf+0xda>
     750:	cc3a                	sw	a4,24(sp)
					ptr = va_arg(va, char*);
     752:	00478713          	addi	a4,a5,4
     756:	439c                	lw	a5,0(a5)
     758:	c43a                	sw	a4,8(sp)
					len = mini_strlen(ptr);
     75a:	853e                	mv	a0,a5
     75c:	ca3e                	sw	a5,20(sp)
     75e:	3df1                	jal	63a <strlen>
					if (pad_to > 0) {
     760:	4762                	lw	a4,24(sp)
     762:	47d2                	lw	a5,20(sp)
					len = mini_strlen(ptr);
     764:	85aa                	mv	a1,a0
					if (pad_to > 0) {
     766:	c759                	beqz	a4,7f4 <mini_vpprintf+0x1a8>
						len = mini_pad(ptr, len, pad_char, pad_to, bf);
     768:	46b2                	lw	a3,12(sp)
     76a:	1838                	addi	a4,sp,56
     76c:	8622                	mv	a2,s0
     76e:	853e                	mv	a0,a5
     770:	a01d                	j	796 <mini_vpprintf+0x14a>
						len = mini_itoa(va_arg(va, unsigned long), 10, 0, (ch=='u'), bf2);
     772:	00478713          	addi	a4,a5,4
     776:	c43a                	sw	a4,8(sp)
					if(l) {
     778:	c615                	beqz	a2,7a4 <mini_vpprintf+0x158>
						len = mini_itoa(va_arg(va, unsigned long), 10, 0, (ch=='u'), bf2);
     77a:	f8b68693          	addi	a3,a3,-117
     77e:	1018                	addi	a4,sp,32
     780:	0016b693          	seqz	a3,a3
     784:	4388                	lw	a0,0(a5)
     786:	4601                	li	a2,0
     788:	45a9                	li	a1,10
     78a:	3499                	jal	1d0 <mini_itoa.part.0>
					len = mini_pad(bf2, len, pad_char, pad_to, bf);
     78c:	46b2                	lw	a3,12(sp)
     78e:	1838                	addi	a4,sp,56
     790:	8622                	mv	a2,s0
     792:	85aa                	mv	a1,a0
					len = mini_pad(bf2, len, pad_char, pad_to, bf);
     794:	1008                	addi	a0,sp,32
     796:	3261                	jal	11e <mini_pad>
					len = puts(bf, len, buf);
     798:	4612                	lw	a2,4(sp)
					len = mini_pad(bf2, len, pad_char, pad_to, bf);
     79a:	85aa                	mv	a1,a0
					len = puts(bf, len, buf);
     79c:	1828                	addi	a0,sp,56
					len = puts(&ch, len, buf);
     79e:	4782                	lw	a5,0(sp)
     7a0:	9782                	jalr	a5
					break;
     7a2:	bdcd                	j	694 <mini_vpprintf+0x48>
						if(ch == 'u') {
     7a4:	07500713          	li	a4,117
     7a8:	00e69563          	bne	a3,a4,7b2 <mini_vpprintf+0x166>
	if (radix > 16)
     7ac:	1018                	addi	a4,sp,32
     7ae:	4685                	li	a3,1
     7b0:	bfd1                	j	784 <mini_vpprintf+0x138>
     7b2:	1018                	addi	a4,sp,32
     7b4:	4681                	li	a3,0
     7b6:	b7f9                	j	784 <mini_vpprintf+0x138>
					if(l) {
     7b8:	4388                	lw	a0,0(a5)
						len = mini_itoa(va_arg(va, unsigned long), 10, 0, (ch=='u'), bf2);
     7ba:	00478713          	addi	a4,a5,4
						len = mini_itoa(va_arg(va, unsigned long), 16, (ch=='X'), 1, bf2);
     7be:	fa868613          	addi	a2,a3,-88
						len = mini_itoa(va_arg(va, unsigned long), 10, 0, (ch=='u'), bf2);
     7c2:	c43a                	sw	a4,8(sp)
	if (radix > 16)
     7c4:	4685                	li	a3,1
     7c6:	1018                	addi	a4,sp,32
     7c8:	00163613          	seqz	a2,a2
     7cc:	45c1                	li	a1,16
     7ce:	3409                	jal	1d0 <mini_itoa.part.0>
					len = mini_pad(bf2, len, pad_char, pad_to, bf);
     7d0:	46b2                	lw	a3,12(sp)
     7d2:	85aa                	mv	a1,a0
     7d4:	1838                	addi	a4,sp,56
     7d6:	8622                	mv	a2,s0
     7d8:	bf75                	j	794 <mini_vpprintf+0x148>
					ch = (char)(va_arg(va, int));
     7da:	00478713          	addi	a4,a5,4
     7de:	439c                	lw	a5,0(a5)
     7e0:	c43a                	sw	a4,8(sp)
					len = mini_pad(&ch, 1, pad_char, pad_to, bf);
     7e2:	46b2                	lw	a3,12(sp)
					ch = (char)(va_arg(va, int));
     7e4:	00f10fa3          	sb	a5,31(sp)
					len = mini_pad(&ch, 1, pad_char, pad_to, bf);
     7e8:	1838                	addi	a4,sp,56
     7ea:	8622                	mv	a2,s0
     7ec:	4585                	li	a1,1
     7ee:	01f10513          	addi	a0,sp,31
     7f2:	b755                	j	796 <mini_vpprintf+0x14a>
						len = puts(ptr, len, buf);
     7f4:	4612                	lw	a2,4(sp)
     7f6:	853e                	mv	a0,a5
     7f8:	b75d                	j	79e <mini_vpprintf+0x152>

000007fa <printf>:
{
     7fa:	fdc10113          	addi	sp,sp,-36
     7fe:	ca32                	sw	a2,20(sp)
	int ret_status = mini_vpprintf(__puts_uart, 0, format, args);
     800:	862a                	mv	a2,a0
{
     802:	c82e                	sw	a1,16(sp)
     804:	cc36                	sw	a3,24(sp)
	int ret_status = mini_vpprintf(__puts_uart, 0, format, args);
     806:	4581                	li	a1,0
	va_start( args, format );
     808:	0814                	addi	a3,sp,16
	int ret_status = mini_vpprintf(__puts_uart, 0, format, args);
     80a:	5a200513          	li	a0,1442
{
     80e:	c606                	sw	ra,12(sp)
     810:	ce3a                	sw	a4,28(sp)
     812:	d03e                	sw	a5,32(sp)
	va_start( args, format );
     814:	c036                	sw	a3,0(sp)
	int ret_status = mini_vpprintf(__puts_uart, 0, format, args);
     816:	3d1d                	jal	64c <mini_vpprintf>
}
     818:	40b2                	lw	ra,12(sp)
     81a:	02410113          	addi	sp,sp,36
     81e:	8082                	ret

00000820 <memset>:
void *memset(void *dest, int c, size_t n) { unsigned char *s = dest; for (; n; n--, s++) *s = c; return dest; }
     820:	962a                	add	a2,a2,a0
     822:	87aa                	mv	a5,a0
     824:	00c79363          	bne	a5,a2,82a <memset+0xa>
     828:	8082                	ret
     82a:	00b78023          	sb	a1,0(a5)
     82e:	0785                	addi	a5,a5,1
     830:	bfd5                	j	824 <memset+0x4>

00000832 <epd_clear>:
	memset (screen, 0x20, NLIN*NCOL);	
     832:	27100613          	li	a2,625
     836:	02000593          	li	a1,32
     83a:	80818513          	addi	a0,gp,-2040 # 20000008 <screen>
     83e:	b7cd                	j	820 <memset>

00000840 <memcpy>:
{
     840:	4781                	li	a5,0
	for (; n; n--) *d++ = *s++;
     842:	00f61363          	bne	a2,a5,848 <memcpy+0x8>
}
     846:	8082                	ret
	for (; n; n--) *d++ = *s++;
     848:	00f58733          	add	a4,a1,a5
     84c:	00074683          	lbu	a3,0(a4) # 40021000 <__global_pointer$+0x20020800>
     850:	00f50733          	add	a4,a0,a5
     854:	0785                	addi	a5,a5,1
     856:	00d70023          	sb	a3,0(a4)
     85a:	b7e5                	j	842 <memcpy+0x2>

0000085c <epd_write>:
void epd_write (uint8_t l, uint8_t c, uint8_t *text) {
     85c:	1141                	addi	sp,sp,-16
     85e:	c422                	sw	s0,8(sp)
     860:	842a                	mv	s0,a0
	memcpy (screen+(l*NCOL)+c, text, strlen((char *) text));
     862:	8532                	mv	a0,a2
void epd_write (uint8_t l, uint8_t c, uint8_t *text) {
     864:	c226                	sw	s1,4(sp)
     866:	c606                	sw	ra,12(sp)
     868:	84b2                	mv	s1,a2
     86a:	c02e                	sw	a1,0(sp)
	memcpy (screen+(l*NCOL)+c, text, strlen((char *) text));
     86c:	33f9                	jal	63a <strlen>
     86e:	00141793          	slli	a5,s0,0x1
     872:	4582                	lw	a1,0(sp)
     874:	97a2                	add	a5,a5,s0
     876:	078e                	slli	a5,a5,0x3
     878:	97a2                	add	a5,a5,s0
}
     87a:	4422                	lw	s0,8(sp)
     87c:	40b2                	lw	ra,12(sp)
	memcpy (screen+(l*NCOL)+c, text, strlen((char *) text));
     87e:	97ae                	add	a5,a5,a1
     880:	862a                	mv	a2,a0
     882:	85a6                	mv	a1,s1
}
     884:	4492                	lw	s1,4(sp)
	memcpy (screen+(l*NCOL)+c, text, strlen((char *) text));
     886:	80818513          	addi	a0,gp,-2040 # 20000008 <screen>
     88a:	953e                	add	a0,a0,a5
}
     88c:	0141                	addi	sp,sp,16
	memcpy (screen+(l*NCOL)+c, text, strlen((char *) text));
     88e:	bf4d                	j	840 <memcpy>

00000890 <SystemInit>:
	// CH32V003 flash latency
#if defined(CH32X03x)
	FLASH->ACTLR = FLASH_ACTLR_LATENCY_2;                   // +2 Cycle Latency (Recommended per TRM)
#elif defined(CH32V003)
	#if FUNCONF_SYSTEM_CORE_CLOCK > 25000000
		FLASH->ACTLR = FLASH_ACTLR_LATENCY_1;               // +1 Cycle Latency
     890:	400227b7          	lui	a5,0x40022
     894:	4705                	li	a4,1
     896:	c398                	sw	a4,0(a5)
#if defined(FUNCONF_USE_HSI) && FUNCONF_USE_HSI
	#if defined(CH32V30x) || defined(CH32V20x) || defined(CH32V10x)
		EXTEN->EXTEN_CTR |= EXTEN_PLL_HSI_PRE;
	#endif
	#if defined(FUNCONF_USE_PLL) && FUNCONF_USE_PLL
		RCC->CFGR0 = BASE_CFGR0;
     898:	400217b7          	lui	a5,0x40021
		RCC->CTLR  = BASE_CTLR | RCC_HSION | RCC_PLLON; 			// Use HSI, enable PLL.
     89c:	01080737          	lui	a4,0x1080
		RCC->CFGR0 = BASE_CFGR0;
     8a0:	0007a223          	sw	zero,4(a5) # 40021004 <__global_pointer$+0x20020804>
		RCC->CTLR  = BASE_CTLR | RCC_HSION | RCC_PLLON; 			// Use HSI, enable PLL.
     8a4:	08170713          	addi	a4,a4,129 # 1080081 <epaper.c.a43bb547+0x107d877>
     8a8:	c398                	sw	a4,0(a5)
	#else
		FLASH->ACTLR = FLASH_ACTLR_LATENCY_1;       		// +1 Cycle Latency
	#endif
#endif

	RCC->INTR  = 0x009F0000;                               // Clear PLL, CSSC, HSE, HSI and LSI ready flags.
     8aa:	009f0737          	lui	a4,0x9f0
     8ae:	c798                	sw	a4,8(a5)

#if defined(FUNCONF_USE_PLL) && FUNCONF_USE_PLL
	while((RCC->CTLR & RCC_PLLRDY) == 0);                       	// Wait till PLL is ready
     8b0:	020006b7          	lui	a3,0x2000
     8b4:	40021737          	lui	a4,0x40021
     8b8:	431c                	lw	a5,0(a4)
     8ba:	8ff5                	and	a5,a5,a3
     8bc:	dff5                	beqz	a5,8b8 <SystemInit+0x28>
	uint32_t tmp32 = RCC->CFGR0 & ~(0x03);							// clr the SW
     8be:	435c                	lw	a5,4(a4)
	RCC->CFGR0 = tmp32 | RCC_SW_PLL;                       			// Select PLL as system clock source
	while ((RCC->CFGR0 & (uint32_t)RCC_SWS) != (uint32_t)0x08); 	// Wait till PLL is used as system clock source
     8c0:	400216b7          	lui	a3,0x40021
	uint32_t tmp32 = RCC->CFGR0 & ~(0x03);							// clr the SW
     8c4:	9bf1                	andi	a5,a5,-4
	RCC->CFGR0 = tmp32 | RCC_SW_PLL;                       			// Select PLL as system clock source
     8c6:	0027e793          	ori	a5,a5,2
     8ca:	c35c                	sw	a5,4(a4)
	while ((RCC->CFGR0 & (uint32_t)RCC_SWS) != (uint32_t)0x08); 	// Wait till PLL is used as system clock source
     8cc:	4721                	li	a4,8
     8ce:	42dc                	lw	a5,4(a3)
     8d0:	8bb1                	andi	a5,a5,12
     8d2:	fee79ee3          	bne	a5,a4,8ce <SystemInit+0x3e>
	*DMDATA1 = 0x0;
     8d6:	e00007b7          	lui	a5,0xe0000
     8da:	0e07ac23          	sw	zero,248(a5) # e00000f8 <__global_pointer$+0xbffff8f8>
	*DMDATA0 = 0x80;
     8de:	08000713          	li	a4,128
     8e2:	0ee7aa23          	sw	a4,244(a5)
	SetupUART( UART_BRR );
#endif
#if defined( FUNCONF_USE_DEBUGPRINTF ) && FUNCONF_USE_DEBUGPRINTF
	SetupDebugPrintf();
#endif
}
     8e6:	8082                	ret

000008e8 <main>:

		// Wait time between updates
		Delay_Ms(3*60000);
}

int main() {
     8e8:	1151                	addi	sp,sp,-12
     8ea:	c406                	sw	ra,8(sp)
     8ec:	c222                	sw	s0,4(sp)
     8ee:	c026                	sw	s1,0(sp)
	// 48MHz external clock
	SystemInit();
     8f0:	3745                	jal	890 <SystemInit>

	Delay_Ms( 100 );
     8f2:	00092537          	lui	a0,0x92
     8f6:	7c050513          	addi	a0,a0,1984 # 927c0 <epaper.c.a43bb547+0x8ffb6>
     8fa:	8c1ff0ef          	jal	ra,1ba <DelaySysTick>
	printf("\r\n\nEpaper example\n\r");
     8fe:	6505                	lui	a0,0x1
     900:	bbc50513          	addi	a0,a0,-1092 # bbc <main+0x2d4>
     904:	3ddd                	jal	7fa <printf>
	RCC->APB2PCENR |= RCC_APB2Periph_GPIOC | RCC_APB2Periph_GPIOA | RCC_APB2Periph_SPI1;
     906:	40021737          	lui	a4,0x40021
     90a:	4f1c                	lw	a5,24(a4)
     90c:	6585                	lui	a1,0x1
     90e:	01458693          	addi	a3,a1,20 # 1014 <fontdata+0xe8>
     912:	8fd5                	or	a5,a5,a3
     914:	cf1c                	sw	a5,24(a4)
	EPAPER_RST_PORT->CFGLR &= ~(0xf<<(4*EPAPER_RST_PIN));
     916:	400117b7          	lui	a5,0x40011
     91a:	4394                	lw	a3,0(a5)
     91c:	767d                	lui	a2,0xfffff
     91e:	0ff60613          	addi	a2,a2,255 # fffff0ff <__global_pointer$+0xdfffe8ff>
     922:	8ef1                	and	a3,a3,a2
     924:	c394                	sw	a3,0(a5)
	EPAPER_RST_PORT->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_PP)<<(4*EPAPER_RST_PIN);
     926:	4394                	lw	a3,0(a5)
	EPAPER_RST_HIGH();
     928:	4711                	li	a4,4
	EPAPER_CS_PORT->CFGLR &= ~(0xf<<(4*EPAPER_CS_PIN));
     92a:	7645                	lui	a2,0xffff1
	EPAPER_RST_PORT->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_PP)<<(4*EPAPER_RST_PIN);
     92c:	1006e693          	ori	a3,a3,256
     930:	c394                	sw	a3,0(a5)
	EPAPER_RST_HIGH();
     932:	cb98                	sw	a4,16(a5)
	EPAPER_CS_PORT->CFGLR &= ~(0xf<<(4*EPAPER_CS_PIN));
     934:	4394                	lw	a3,0(a5)
     936:	167d                	addi	a2,a2,-1
		Delay_Ms(3*60000);
     938:	405f8437          	lui	s0,0x405f8
	EPAPER_CS_PORT->CFGLR &= ~(0xf<<(4*EPAPER_CS_PIN));
     93c:	8ef1                	and	a3,a3,a2
     93e:	c394                	sw	a3,0(a5)
	EPAPER_CS_PORT->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_PP)<<(4*EPAPER_CS_PIN);
     940:	4398                	lw	a4,0(a5)
	EPAPER_DC_PORT->CFGLR &= ~(0xf<<(4*EPAPER_DC_PIN));
     942:	fff106b7          	lui	a3,0xfff10
     946:	16fd                	addi	a3,a3,-1
	EPAPER_CS_PORT->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_PP)<<(4*EPAPER_CS_PIN);
     948:	8f4d                	or	a4,a4,a1
     94a:	c398                	sw	a4,0(a5)
	EPAPER_CS_HIGH();
     94c:	4721                	li	a4,8
     94e:	cb98                	sw	a4,16(a5)
	EPAPER_DC_PORT->CFGLR &= ~(0xf<<(4*EPAPER_DC_PIN));
     950:	4398                	lw	a4,0(a5)
		Delay_Ms(3*60000);
     952:	e0040413          	addi	s0,s0,-512 # 405f7e00 <__global_pointer$+0x205f7600>
	EPAPER_DC_PORT->CFGLR &= ~(0xf<<(4*EPAPER_DC_PIN));
     956:	8f75                	and	a4,a4,a3
     958:	c398                	sw	a4,0(a5)
	EPAPER_DC_PORT->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_PP)<<(4*EPAPER_DC_PIN);
     95a:	4398                	lw	a4,0(a5)
     95c:	66c1                	lui	a3,0x10
     95e:	8f55                	or	a4,a4,a3
     960:	c398                	sw	a4,0(a5)
	EPAPER_DC_LOW();
     962:	00100737          	lui	a4,0x100
     966:	cb98                	sw	a4,16(a5)
	EPAPER_BUSY_PORT->CFGLR &= ~0xf<<(4*EPAPER_BUSY_PIN);
     968:	8007a703          	lw	a4,-2048(a5) # 40010800 <__global_pointer$+0x20010000>
	GPIOC->CFGLR &= ~(0xf<<(4*5));
     96c:	ff1006b7          	lui	a3,0xff100
     970:	16fd                	addi	a3,a3,-1
	EPAPER_BUSY_PORT->CFGLR &= ~0xf<<(4*EPAPER_BUSY_PIN);
     972:	f0077713          	andi	a4,a4,-256
     976:	80e7a023          	sw	a4,-2048(a5)
	EPAPER_BUSY_PORT->CFGLR |= (GPIO_Speed_In | GPIO_CNF_IN_FLOATING)<<(4*EPAPER_BUSY_PIN);
     97a:	8007a703          	lw	a4,-2048(a5)
     97e:	04076713          	ori	a4,a4,64
     982:	80e7a023          	sw	a4,-2048(a5)
	GPIOC->CFGLR &= ~(0xf<<(4*5));
     986:	4398                	lw	a4,0(a5)
     988:	8f75                	and	a4,a4,a3
     98a:	c398                	sw	a4,0(a5)
	GPIOC->CFGLR |= (GPIO_Speed_50MHz | GPIO_CNF_OUT_PP_AF)<<(4*5);
     98c:	4398                	lw	a4,0(a5)
     98e:	00b006b7          	lui	a3,0xb00
     992:	8f55                	or	a4,a4,a3
     994:	c398                	sw	a4,0(a5)
	GPIOC->CFGLR &= ~(0xf<<(4*6));
     996:	4398                	lw	a4,0(a5)
     998:	f10006b7          	lui	a3,0xf1000
     99c:	16fd                	addi	a3,a3,-1
     99e:	8f75                	and	a4,a4,a3
     9a0:	c398                	sw	a4,0(a5)
	GPIOC->CFGLR |= (GPIO_Speed_50MHz | GPIO_CNF_OUT_PP_AF)<<(4*6);
     9a2:	4398                	lw	a4,0(a5)
     9a4:	0b0006b7          	lui	a3,0xb000
     9a8:	8f55                	or	a4,a4,a3
     9aa:	c398                	sw	a4,0(a5)
	SPI1->CTLR1 = 
     9ac:	77f1                	lui	a5,0xffffc
     9ae:	40013737          	lui	a4,0x40013
     9b2:	31f78793          	addi	a5,a5,799 # ffffc31f <__global_pointer$+0xdfffbb1f>
     9b6:	00f71023          	sh	a5,0(a4) # 40013000 <__global_pointer$+0x20012800>
	SPI1->CTLR1 |= CTLR1_SPE_Set;
     9ba:	00075783          	lhu	a5,0(a4)
     9be:	07c2                	slli	a5,a5,0x10
     9c0:	83c1                	srli	a5,a5,0x10
     9c2:	0407e793          	ori	a5,a5,64
     9c6:	00f71023          	sh	a5,0(a4)
		epd_clear();
     9ca:	35a5                	jal	832 <epd_clear>
		epd_write( 2, 0, (uint8_t *) "          ......         ");
     9cc:	6605                	lui	a2,0x1
     9ce:	bd060613          	addi	a2,a2,-1072 # bd0 <main+0x2e8>
     9d2:	4581                	li	a1,0
     9d4:	4509                	li	a0,2
     9d6:	3559                	jal	85c <epd_write>
		epd_write( 3, 0, (uint8_t *) "       .......::--.      ");
     9d8:	6605                	lui	a2,0x1
     9da:	bec60613          	addi	a2,a2,-1044 # bec <main+0x304>
     9de:	4581                	li	a1,0
     9e0:	450d                	li	a0,3
     9e2:	3dad                	jal	85c <epd_write>
		epd_write( 4, 0, (uint8_t *) "    ..:..........:-=     ");
     9e4:	6605                	lui	a2,0x1
     9e6:	c0860613          	addi	a2,a2,-1016 # c08 <main+0x320>
     9ea:	4581                	li	a1,0
     9ec:	4511                	li	a0,4
     9ee:	35bd                	jal	85c <epd_write>
		epd_write( 5, 0, (uint8_t *) "   ..::::........::--.   ");
     9f0:	6605                	lui	a2,0x1
     9f2:	c2460613          	addi	a2,a2,-988 # c24 <main+0x33c>
     9f6:	4581                	li	a1,0
     9f8:	4515                	li	a0,5
     9fa:	358d                	jal	85c <epd_write>
		epd_write( 6, 0, (uint8_t *) "  ...:::........:.::-:.. ");
     9fc:	6605                	lui	a2,0x1
     9fe:	c4060613          	addi	a2,a2,-960 # c40 <main+0x358>
     a02:	4581                	li	a1,0
     a04:	4519                	li	a0,6
     a06:	3d99                	jal	85c <epd_write>
		epd_write( 7, 0, (uint8_t *) "  ...:.:=-:...:.:-:....: ");
     a08:	6605                	lui	a2,0x1
     a0a:	c5c60613          	addi	a2,a2,-932 # c5c <main+0x374>
     a0e:	4581                	li	a1,0
     a10:	451d                	li	a0,7
     a12:	35a9                	jal	85c <epd_write>
		epd_write( 8, 0, (uint8_t *) "  :-=++*+++=-.:-++++==-: ");
     a14:	6605                	lui	a2,0x1
     a16:	c7860613          	addi	a2,a2,-904 # c78 <main+0x390>
     a1a:	4581                	li	a1,0
     a1c:	4521                	li	a0,8
     a1e:	3d3d                	jal	85c <epd_write>
		epd_write( 9, 0, (uint8_t *) "  -==:--**::-:--=#==--=  ");
     a20:	6605                	lui	a2,0x1
     a22:	c9460613          	addi	a2,a2,-876 # c94 <main+0x3ac>
     a26:	4581                	li	a1,0
     a28:	4525                	li	a0,9
     a2a:	3d0d                	jal	85c <epd_write>
		epd_write(10, 0, (uint8_t *) "  :-=::::.:=-:-=:::-:::  ");
     a2c:	6605                	lui	a2,0x1
     a2e:	cb060613          	addi	a2,a2,-848 # cb0 <main+0x3c8>
     a32:	4581                	li	a1,0
     a34:	4529                	li	a0,10
     a36:	351d                	jal	85c <epd_write>
		epd_write(11, 0, (uint8_t *) "   ==::=..:::.:-:::::-   ");
     a38:	6605                	lui	a2,0x1
     a3a:	ccc60613          	addi	a2,a2,-820 # ccc <main+0x3e4>
     a3e:	4581                	li	a1,0
     a40:	452d                	li	a0,11
     a42:	3d29                	jal	85c <epd_write>
		epd_write(12, 0, (uint8_t *) "   -=-::...-+:--..::--   ");
     a44:	6605                	lui	a2,0x1
     a46:	ce860613          	addi	a2,a2,-792 # ce8 <main+0x400>
     a4a:	4581                	li	a1,0
     a4c:	4531                	li	a0,12
     a4e:	3539                	jal	85c <epd_write>
		epd_write(13, 0, (uint8_t *) "    +=-::::::.:::::--:   ");
     a50:	6605                	lui	a2,0x1
     a52:	d0460613          	addi	a2,a2,-764 # d04 <main+0x41c>
     a56:	4581                	li	a1,0
     a58:	4535                	li	a0,13
     a5a:	3509                	jal	85c <epd_write>
		epd_write(14, 0, (uint8_t *) "    :=-:::::+==::::-=    ");
     a5c:	6605                	lui	a2,0x1
     a5e:	d2060613          	addi	a2,a2,-736 # d20 <main+0x438>
     a62:	4581                	li	a1,0
     a64:	4539                	li	a0,14
     a66:	3bdd                	jal	85c <epd_write>
		epd_write(15, 0, (uint8_t *) "    =*=-::=#***@=:-=+    ");
     a68:	6605                	lui	a2,0x1
     a6a:	d3c60613          	addi	a2,a2,-708 # d3c <main+0x454>
     a6e:	4581                	li	a1,0
     a70:	453d                	li	a0,15
     a72:	33ed                	jal	85c <epd_write>
		epd_write(16, 0, (uint8_t *) "    @@*==-:-------=+@@.  ");
     a74:	6605                	lui	a2,0x1
     a76:	d5860613          	addi	a2,a2,-680 # d58 <main+0x470>
     a7a:	4581                	li	a1,0
     a7c:	4541                	li	a0,16
     a7e:	3bf9                	jal	85c <epd_write>
		epd_write(17, 0, (uint8_t *) ".=@@@@%#+-:::--:--*#@@##=");
     a80:	6605                	lui	a2,0x1
     a82:	d7460613          	addi	a2,a2,-652 # d74 <main+0x48c>
     a86:	4581                	li	a1,0
     a88:	4545                	li	a0,17
     a8a:	3bc9                	jal	85c <epd_write>
		epd_write(18, 0, (uint8_t *) "%@%%@@@###=-:::-+#*#@@@%%");
     a8c:	6605                	lui	a2,0x1
     a8e:	d9060613          	addi	a2,a2,-624 # d90 <main+0x4a8>
     a92:	4581                	li	a1,0
     a94:	4549                	li	a0,18
     a96:	33d9                	jal	85c <epd_write>
		epd_write(19, 0, (uint8_t *) "%@#@@@@@%#%#*#%%+#@@@@@@%");
     a98:	6605                	lui	a2,0x1
     a9a:	dac60613          	addi	a2,a2,-596 # dac <main+0x4c4>
     a9e:	4581                	li	a1,0
     aa0:	454d                	li	a0,19
     aa2:	3b6d                	jal	85c <epd_write>
		epd_write(20, 0, (uint8_t *) "@@@%@@@@@@@%=-*@@@@@%@@%%");
     aa4:	6605                	lui	a2,0x1
     aa6:	dc860613          	addi	a2,a2,-568 # dc8 <main+0x4e0>
     aaa:	4581                	li	a1,0
     aac:	4551                	li	a0,20
     aae:	337d                	jal	85c <epd_write>
		epd_refresh();
     ab0:	929ff0ef          	jal	ra,3d8 <epd_refresh>
		Delay_Ms(3*60000);
     ab4:	8522                	mv	a0,s0
     ab6:	f04ff0ef          	jal	ra,1ba <DelaySysTick>
		epd_clear();
     aba:	3ba5                	jal	832 <epd_clear>
		*p++ = 0x00;
     abc:	4665                	li	a2,25
     abe:	4581                	li	a1,0
     ac0:	80818513          	addi	a0,gp,-2040 # 20000008 <screen>
     ac4:	3bb1                	jal	820 <memset>
     ac6:	80818793          	addi	a5,gp,-2040 # 20000008 <screen>
     aca:	23f78713          	addi	a4,a5,575
     ace:	80818513          	addi	a0,gp,-2040 # 20000008 <screen>
		*p = 0x02;
     ad2:	4609                	li	a2,2
		*p++ = 0x03;
     ad4:	468d                	li	a3,3
		*p = 0x02;
     ad6:	00c78ca3          	sb	a2,25(a5)
		*p++ = 0x03;
     ada:	02d788a3          	sb	a3,49(a5)
	for (int i = 0; i < (nl-2); i++) {
     ade:	07e5                	addi	a5,a5,25
     ae0:	fee79be3          	bne	a5,a4,ad6 <main+0x1ee>
		*p++ = 0x01;
     ae4:	4665                	li	a2,25
     ae6:	4585                	li	a1,1
     ae8:	25850513          	addi	a0,a0,600
     aec:	3b15                	jal	820 <memset>
		epd_write(2, 1, (uint8_t *) "DQSoft 2024");
     aee:	6605                	lui	a2,0x1
     af0:	de460613          	addi	a2,a2,-540 # de4 <main+0x4fc>
     af4:	4585                	li	a1,1
     af6:	4509                	li	a0,2
     af8:	3395                	jal	85c <epd_write>
		epd_write(6, 1, (uint8_t *) "ABCDEFGHIJKLMNOPQRSTUVW");
     afa:	6605                	lui	a2,0x1
     afc:	df060613          	addi	a2,a2,-528 # df0 <main+0x508>
     b00:	4585                	li	a1,1
     b02:	4519                	li	a0,6
     b04:	3ba1                	jal	85c <epd_write>
		epd_write(7, 1, (uint8_t *) "XYZ0123456789[](){}/?;:");
     b06:	6605                	lui	a2,0x1
     b08:	e0860613          	addi	a2,a2,-504 # e08 <main+0x520>
     b0c:	4585                	li	a1,1
     b0e:	451d                	li	a0,7
     b10:	33b1                	jal	85c <epd_write>
		epd_write(10, 1, (uint8_t *) "Call me Ishmael. Some");
     b12:	6605                	lui	a2,0x1
     b14:	e2060613          	addi	a2,a2,-480 # e20 <main+0x538>
     b18:	4585                	li	a1,1
     b1a:	4529                	li	a0,10
     b1c:	3381                	jal	85c <epd_write>
		epd_write(11, 1, (uint8_t *) "years ago - never mind");
     b1e:	6605                	lui	a2,0x1
     b20:	e3860613          	addi	a2,a2,-456 # e38 <main+0x550>
     b24:	4585                	li	a1,1
     b26:	452d                	li	a0,11
     b28:	3b15                	jal	85c <epd_write>
		epd_write(12, 1, (uint8_t *) "how long precisely -");
     b2a:	6605                	lui	a2,0x1
     b2c:	e5060613          	addi	a2,a2,-432 # e50 <main+0x568>
     b30:	4585                	li	a1,1
     b32:	4531                	li	a0,12
     b34:	3325                	jal	85c <epd_write>
		epd_write(13, 1, (uint8_t *) "having little or no");
     b36:	6605                	lui	a2,0x1
     b38:	e6860613          	addi	a2,a2,-408 # e68 <main+0x580>
     b3c:	4585                	li	a1,1
     b3e:	4535                	li	a0,13
     b40:	3b31                	jal	85c <epd_write>
		epd_write(14, 1, (uint8_t *) "money in my purse...");
     b42:	6605                	lui	a2,0x1
     b44:	e7c60613          	addi	a2,a2,-388 # e7c <main+0x594>
     b48:	4585                	li	a1,1
     b4a:	4539                	li	a0,14
     b4c:	3b01                	jal	85c <epd_write>
		epd_refresh();
     b4e:	88bff0ef          	jal	ra,3d8 <epd_refresh>
		Delay_Ms(3*60000);
     b52:	8522                	mv	a0,s0
     b54:	e66ff0ef          	jal	ra,1ba <DelaySysTick>
		epd_clear();
     b58:	39e9                	jal	832 <epd_clear>
		epd_write(5, 0, (uint8_t *) " /\\_/\\      /\\_/\\");
     b5a:	6605                	lui	a2,0x1
     b5c:	e9460613          	addi	a2,a2,-364 # e94 <main+0x5ac>
     b60:	4581                	li	a1,0
     b62:	4515                	li	a0,5
     b64:	39e5                	jal	85c <epd_write>
		epd_write(6, 0, (uint8_t *) "( o.o )    ( o.o )");
     b66:	6605                	lui	a2,0x1
     b68:	ea860613          	addi	a2,a2,-344 # ea8 <main+0x5c0>
     b6c:	4581                	li	a1,0
     b6e:	4519                	li	a0,6
     b70:	31f5                	jal	85c <epd_write>
		epd_write(7, 0, (uint8_t *) " > ^ <      > ^ <");
     b72:	6605                	lui	a2,0x1
     b74:	ebc60613          	addi	a2,a2,-324 # ebc <main+0x5d4>
     b78:	4581                	li	a1,0
     b7a:	451d                	li	a0,7
     b7c:	31c5                	jal	85c <epd_write>
		epd_write(10, 0, (uint8_t *) " _._     _,-'\"\"`-._");
     b7e:	6605                	lui	a2,0x1
     b80:	ed060613          	addi	a2,a2,-304 # ed0 <main+0x5e8>
     b84:	4581                	li	a1,0
     b86:	4529                	li	a0,10
     b88:	39d1                	jal	85c <epd_write>
		epd_write(11, 0, (uint8_t *) "(,-.`._,'(       |\\`-/|");
     b8a:	6605                	lui	a2,0x1
     b8c:	ee460613          	addi	a2,a2,-284 # ee4 <main+0x5fc>
     b90:	4581                	li	a1,0
     b92:	452d                	li	a0,11
     b94:	31e1                	jal	85c <epd_write>
		epd_write(12, 0, (uint8_t *) "    `-.-' \\ )-`( , o o)");
     b96:	6605                	lui	a2,0x1
     b98:	efc60613          	addi	a2,a2,-260 # efc <main+0x614>
     b9c:	4581                	li	a1,0
     b9e:	4531                	li	a0,12
     ba0:	3975                	jal	85c <epd_write>
		epd_write(13, 0, (uint8_t *) "          `-    \\`_`\"'-");
     ba2:	6605                	lui	a2,0x1
     ba4:	f1460613          	addi	a2,a2,-236 # f14 <main+0x62c>
     ba8:	4581                	li	a1,0
     baa:	4535                	li	a0,13
     bac:	3945                	jal	85c <epd_write>
		epd_refresh();
     bae:	82bff0ef          	jal	ra,3d8 <epd_refresh>
		Delay_Ms(3*60000);
     bb2:	8522                	mv	a0,s0
     bb4:	e06ff0ef          	jal	ra,1ba <DelaySysTick>
     bb8:	bd09                	j	9ca <main+0xe2>
     bba:	0000                	unimp
     bbc:	0a0d                	addi	s4,s4,3
     bbe:	450a                	lw	a0,128(sp)
     bc0:	6170                	flw	fa2,68(a0)
     bc2:	6570                	flw	fa2,76(a0)
     bc4:	2072                	fld	ft0,280(sp)
     bc6:	7865                	lui	a6,0xffff9
     bc8:	6d61                	lui	s10,0x18
     bca:	6c70                	flw	fa2,92(s0)
     bcc:	0a65                	addi	s4,s4,25
     bce:	000d                	c.nop	3
     bd0:	2020                	fld	fs0,64(s0)
     bd2:	2020                	fld	fs0,64(s0)
     bd4:	2020                	fld	fs0,64(s0)
     bd6:	2020                	fld	fs0,64(s0)
     bd8:	2020                	fld	fs0,64(s0)
     bda:	2e2e                	fld	ft8,200(sp)
     bdc:	2e2e                	fld	ft8,200(sp)
     bde:	2e2e                	fld	ft8,200(sp)
     be0:	2020                	fld	fs0,64(s0)
     be2:	2020                	fld	fs0,64(s0)
     be4:	2020                	fld	fs0,64(s0)
     be6:	2020                	fld	fs0,64(s0)
     be8:	0020                	addi	s0,sp,8
     bea:	0000                	unimp
     bec:	2020                	fld	fs0,64(s0)
     bee:	2020                	fld	fs0,64(s0)
     bf0:	2020                	fld	fs0,64(s0)
     bf2:	2e20                	fld	fs0,88(a2)
     bf4:	2e2e                	fld	ft8,200(sp)
     bf6:	2e2e                	fld	ft8,200(sp)
     bf8:	2e2e                	fld	ft8,200(sp)
     bfa:	3a3a                	fld	fs4,424(sp)
     bfc:	2d2d                	jal	1236 <fontdata+0x30a>
     bfe:	202e                	fld	ft0,200(sp)
     c00:	2020                	fld	fs0,64(s0)
     c02:	2020                	fld	fs0,64(s0)
     c04:	0020                	addi	s0,sp,8
     c06:	0000                	unimp
     c08:	2020                	fld	fs0,64(s0)
     c0a:	2020                	fld	fs0,64(s0)
     c0c:	2e2e                	fld	ft8,200(sp)
     c0e:	2e3a                	fld	ft8,392(sp)
     c10:	2e2e                	fld	ft8,200(sp)
     c12:	2e2e                	fld	ft8,200(sp)
     c14:	2e2e                	fld	ft8,200(sp)
     c16:	2e2e                	fld	ft8,200(sp)
     c18:	3a2e                	fld	fs4,232(sp)
     c1a:	3d2d                	jal	a54 <main+0x16c>
     c1c:	2020                	fld	fs0,64(s0)
     c1e:	2020                	fld	fs0,64(s0)
     c20:	0020                	addi	s0,sp,8
     c22:	0000                	unimp
     c24:	2020                	fld	fs0,64(s0)
     c26:	2e20                	fld	fs0,88(a2)
     c28:	3a2e                	fld	fs4,232(sp)
     c2a:	3a3a                	fld	fs4,424(sp)
     c2c:	2e3a                	fld	ft8,392(sp)
     c2e:	2e2e                	fld	ft8,200(sp)
     c30:	2e2e                	fld	ft8,200(sp)
     c32:	2e2e                	fld	ft8,200(sp)
     c34:	3a2e                	fld	fs4,232(sp)
     c36:	2d3a                	fld	fs10,392(sp)
     c38:	2e2d                	jal	f72 <fontdata+0x46>
     c3a:	2020                	fld	fs0,64(s0)
     c3c:	0020                	addi	s0,sp,8
     c3e:	0000                	unimp
     c40:	2020                	fld	fs0,64(s0)
     c42:	2e2e                	fld	ft8,200(sp)
     c44:	3a2e                	fld	fs4,232(sp)
     c46:	3a3a                	fld	fs4,424(sp)
     c48:	2e2e                	fld	ft8,200(sp)
     c4a:	2e2e                	fld	ft8,200(sp)
     c4c:	2e2e                	fld	ft8,200(sp)
     c4e:	2e2e                	fld	ft8,200(sp)
     c50:	2e3a                	fld	ft8,392(sp)
     c52:	3a3a                	fld	fs4,424(sp)
     c54:	3a2d                	jal	58e <_write.constprop.0+0xbe>
     c56:	2e2e                	fld	ft8,200(sp)
     c58:	0020                	addi	s0,sp,8
     c5a:	0000                	unimp
     c5c:	2020                	fld	fs0,64(s0)
     c5e:	2e2e                	fld	ft8,200(sp)
     c60:	3a2e                	fld	fs4,232(sp)
     c62:	3a2e                	fld	fs4,232(sp)
     c64:	2d3d                	jal	12a2 <fontdata+0x376>
     c66:	2e3a                	fld	ft8,392(sp)
     c68:	2e2e                	fld	ft8,200(sp)
     c6a:	2e3a                	fld	ft8,392(sp)
     c6c:	2d3a                	fld	fs10,392(sp)
     c6e:	2e3a                	fld	ft8,392(sp)
     c70:	2e2e                	fld	ft8,200(sp)
     c72:	3a2e                	fld	fs4,232(sp)
     c74:	0020                	addi	s0,sp,8
     c76:	0000                	unimp
     c78:	2020                	fld	fs0,64(s0)
     c7a:	2d3a                	fld	fs10,392(sp)
     c7c:	2b3d                	jal	11ba <fontdata+0x28e>
     c7e:	2b2b2a2b          	0x2b2b2a2b
     c82:	2e2d3d2b          	0x2e2d3d2b
     c86:	2d3a                	fld	fs10,392(sp)
     c88:	2b2b2b2b          	0x2b2b2b2b
     c8c:	3d3d                	jal	aca <main+0x1e2>
     c8e:	3a2d                	jal	5c8 <handle_reset+0x12>
     c90:	0020                	addi	s0,sp,8
     c92:	0000                	unimp
     c94:	2020                	fld	fs0,64(s0)
     c96:	3d2d                	jal	ad0 <main+0x1e8>
     c98:	3a3d                	jal	5d6 <handle_reset+0x20>
     c9a:	2d2d                	jal	12d4 <fontdata+0x3a8>
     c9c:	2a2a                	fld	fs4,136(sp)
     c9e:	3a3a                	fld	fs4,424(sp)
     ca0:	3a2d                	jal	5da <handle_reset+0x24>
     ca2:	2d2d                	jal	12dc <fontdata+0x3b0>
     ca4:	233d                	jal	11d2 <fontdata+0x2a6>
     ca6:	3d3d                	jal	ae4 <main+0x1fc>
     ca8:	2d2d                	jal	12e2 <fontdata+0x3b6>
     caa:	203d                	jal	cd8 <main+0x3f0>
     cac:	0020                	addi	s0,sp,8
     cae:	0000                	unimp
     cb0:	2020                	fld	fs0,64(s0)
     cb2:	2d3a                	fld	fs10,392(sp)
     cb4:	3a3d                	jal	5f2 <handle_reset+0x3c>
     cb6:	3a3a                	fld	fs4,424(sp)
     cb8:	2e3a                	fld	ft8,392(sp)
     cba:	3d3a                	fld	fs10,424(sp)
     cbc:	3a2d                	jal	5f6 <handle_reset+0x40>
     cbe:	3d2d                	jal	af8 <main+0x210>
     cc0:	3a3a                	fld	fs4,424(sp)
     cc2:	2d3a                	fld	fs10,392(sp)
     cc4:	3a3a                	fld	fs4,424(sp)
     cc6:	203a                	fld	ft0,392(sp)
     cc8:	0020                	addi	s0,sp,8
     cca:	0000                	unimp
     ccc:	2020                	fld	fs0,64(s0)
     cce:	3d20                	fld	fs0,120(a0)
     cd0:	3a3d                	jal	60e <handle_reset+0x58>
     cd2:	3d3a                	fld	fs10,424(sp)
     cd4:	2e2e                	fld	ft8,200(sp)
     cd6:	3a3a                	fld	fs4,424(sp)
     cd8:	2e3a                	fld	ft8,392(sp)
     cda:	2d3a                	fld	fs10,392(sp)
     cdc:	3a3a                	fld	fs4,424(sp)
     cde:	3a3a                	fld	fs4,424(sp)
     ce0:	2d3a                	fld	fs10,392(sp)
     ce2:	2020                	fld	fs0,64(s0)
     ce4:	0020                	addi	s0,sp,8
     ce6:	0000                	unimp
     ce8:	2020                	fld	fs0,64(s0)
     cea:	2d20                	fld	fs0,88(a0)
     cec:	2d3d                	jal	132a <fontdata+0x3fe>
     cee:	3a3a                	fld	fs4,424(sp)
     cf0:	2e2e                	fld	ft8,200(sp)
     cf2:	2d2e                	fld	fs10,200(sp)
     cf4:	2d2d3a2b          	0x2d2d3a2b
     cf8:	2e2e                	fld	ft8,200(sp)
     cfa:	3a3a                	fld	fs4,424(sp)
     cfc:	2d2d                	jal	1336 <fontdata+0x40a>
     cfe:	2020                	fld	fs0,64(s0)
     d00:	0020                	addi	s0,sp,8
     d02:	0000                	unimp
     d04:	2020                	fld	fs0,64(s0)
     d06:	2020                	fld	fs0,64(s0)
     d08:	3a2d3d2b          	0x3a2d3d2b
     d0c:	3a3a                	fld	fs4,424(sp)
     d0e:	3a3a                	fld	fs4,424(sp)
     d10:	2e3a                	fld	ft8,392(sp)
     d12:	3a3a                	fld	fs4,424(sp)
     d14:	3a3a                	fld	fs4,424(sp)
     d16:	2d3a                	fld	fs10,392(sp)
     d18:	3a2d                	jal	652 <mini_vpprintf+0x6>
     d1a:	2020                	fld	fs0,64(s0)
     d1c:	0020                	addi	s0,sp,8
     d1e:	0000                	unimp
     d20:	2020                	fld	fs0,64(s0)
     d22:	2020                	fld	fs0,64(s0)
     d24:	3d3a                	fld	fs10,424(sp)
     d26:	3a2d                	jal	660 <mini_vpprintf+0x14>
     d28:	3a3a                	fld	fs4,424(sp)
     d2a:	3a3a                	fld	fs4,424(sp)
     d2c:	3a3d3d2b          	0x3a3d3d2b
     d30:	3a3a                	fld	fs4,424(sp)
     d32:	2d3a                	fld	fs10,392(sp)
     d34:	203d                	jal	d62 <main+0x47a>
     d36:	2020                	fld	fs0,64(s0)
     d38:	0020                	addi	s0,sp,8
     d3a:	0000                	unimp
     d3c:	2020                	fld	fs0,64(s0)
     d3e:	2020                	fld	fs0,64(s0)
     d40:	2a3d                	jal	e7e <main+0x596>
     d42:	2d3d                	jal	1380 <fontdata+0x454>
     d44:	3a3a                	fld	fs4,424(sp)
     d46:	233d                	jal	1274 <fontdata+0x348>
     d48:	2a2a                	fld	fs4,136(sp)
     d4a:	402a                	0x402a
     d4c:	3a3d                	jal	68a <mini_vpprintf+0x3e>
     d4e:	3d2d                	jal	b88 <main+0x2a0>
     d50:	2020202b          	0x2020202b
     d54:	0020                	addi	s0,sp,8
     d56:	0000                	unimp
     d58:	2020                	fld	fs0,64(s0)
     d5a:	2020                	fld	fs0,64(s0)
     d5c:	4040                	lw	s0,4(s0)
     d5e:	3d2a                	fld	fs10,168(sp)
     d60:	2d3d                	jal	139e <fontdata+0x472>
     d62:	2d3a                	fld	fs10,392(sp)
     d64:	2d2d                	jal	139e <fontdata+0x472>
     d66:	2d2d                	jal	13a0 <fontdata+0x474>
     d68:	2d2d                	jal	13a2 <fontdata+0x476>
     d6a:	2b3d                	jal	12a8 <fontdata+0x37c>
     d6c:	4040                	lw	s0,4(s0)
     d6e:	202e                	fld	ft0,200(sp)
     d70:	0020                	addi	s0,sp,8
     d72:	0000                	unimp
     d74:	3d2e                	fld	fs10,232(sp)
     d76:	4040                	lw	s0,4(s0)
     d78:	4040                	lw	s0,4(s0)
     d7a:	2325                	jal	12a2 <fontdata+0x376>
     d7c:	3a3a2d2b          	0x3a3a2d2b
     d80:	2d3a                	fld	fs10,392(sp)
     d82:	3a2d                	jal	6bc <mini_vpprintf+0x70>
     d84:	2d2d                	jal	13be <fontdata+0x492>
     d86:	232a                	fld	ft6,136(sp)
     d88:	4040                	lw	s0,4(s0)
     d8a:	003d2323          	sw	gp,6(s10) # 18006 <epaper.c.a43bb547+0x157fc>
     d8e:	0000                	unimp
     d90:	4025                	c.li	zero,9
     d92:	2525                	jal	13ba <fontdata+0x48e>
     d94:	4040                	lw	s0,4(s0)
     d96:	2340                	fld	fs0,128(a4)
     d98:	2d3d2323          	sw	s3,710(s10)
     d9c:	3a3a                	fld	fs4,424(sp)
     d9e:	2d3a                	fld	fs10,392(sp)
     da0:	232a232b          	0x232a232b
     da4:	4040                	lw	s0,4(s0)
     da6:	2540                	fld	fs0,136(a0)
     da8:	0025                	c.nop	9
     daa:	0000                	unimp
     dac:	4025                	c.li	zero,9
     dae:	40404023          	0x40404023
     db2:	4040                	lw	s0,4(s0)
     db4:	2325                	jal	12dc <fontdata+0x3b0>
     db6:	2325                	jal	12de <fontdata+0x3b2>
     db8:	232a                	fld	ft6,136(sp)
     dba:	2525                	jal	13e2 <fontdata+0x4b6>
     dbc:	4040232b          	0x4040232b
     dc0:	4040                	lw	s0,4(s0)
     dc2:	4040                	lw	s0,4(s0)
     dc4:	0025                	c.nop	9
     dc6:	0000                	unimp
     dc8:	4040                	lw	s0,4(s0)
     dca:	2540                	fld	fs0,136(a0)
     dcc:	4040                	lw	s0,4(s0)
     dce:	4040                	lw	s0,4(s0)
     dd0:	4040                	lw	s0,4(s0)
     dd2:	2540                	fld	fs0,136(a0)
     dd4:	2d3d                	jal	1412 <fontdata+0x4e6>
     dd6:	402a                	0x402a
     dd8:	4040                	lw	s0,4(s0)
     dda:	4040                	lw	s0,4(s0)
     ddc:	4025                	c.li	zero,9
     dde:	2540                	fld	fs0,136(a0)
     de0:	0025                	c.nop	9
     de2:	0000                	unimp
     de4:	5144                	lw	s1,36(a0)
     de6:	74666f53          	0x74666f53
     dea:	3220                	fld	fs0,96(a2)
     dec:	3230                	fld	fa2,96(a2)
     dee:	0034                	addi	a3,sp,8
     df0:	4241                	li	tp,16
     df2:	46454443          	fmadd.q	fs0,fa0,ft4,fs0,rmm
     df6:	4a494847          	fmsub.d	fa6,fs2,ft4,fs1,rmm
     dfa:	4e4d4c4b          	fnmsub.q	fs8,fs10,ft4,fs1,rmm
     dfe:	5251504f          	fnmadd.d	ft0,ft2,ft5,fa0,unknown
     e02:	56555453          	0x56555453
     e06:	59580057          	0x59580057
     e0a:	305a                	fld	ft0,432(sp)
     e0c:	3231                	jal	718 <mini_vpprintf+0xcc>
     e0e:	36353433          	0x36353433
     e12:	5b393837          	lui	a6,0x5b393
     e16:	285d                	jal	ecc <main+0x5e4>
     e18:	7b29                	lui	s6,0xfffea
     e1a:	2f7d                	jal	15d8 <fontdata+0x6ac>
     e1c:	003a3b3f 6c6c6143 	0x6c6c6143003a3b3f
     e24:	6d20                	flw	fs0,88(a0)
     e26:	2065                	jal	ece <main+0x5e6>
     e28:	7349                	lui	t1,0xffff2
     e2a:	6d68                	flw	fa0,92(a0)
     e2c:	6561                	lui	a0,0x18
     e2e:	2e6c                	fld	fa1,216(a2)
     e30:	5320                	lw	s0,96(a4)
     e32:	00656d6f          	jal	s10,56e38 <epaper.c.a43bb547+0x5462e>
     e36:	0000                	unimp
     e38:	6579                	lui	a0,0x1e
     e3a:	7261                	lui	tp,0xffff8
     e3c:	67612073          	csrs	0x676,sp
     e40:	202d206f          	j	d3042 <epaper.c.a43bb547+0xd0838>
     e44:	656e                	flw	fa0,216(sp)
     e46:	6576                	flw	fa0,92(sp)
     e48:	2072                	fld	ft0,280(sp)
     e4a:	696d                	lui	s2,0x1b
     e4c:	646e                	flw	fs0,216(sp)
     e4e:	0000                	unimp
     e50:	6f68                	flw	fa0,92(a4)
     e52:	6f6c2077          	0x6f6c2077
     e56:	676e                	flw	fa4,216(sp)
     e58:	7020                	flw	fs0,96(s0)
     e5a:	6572                	flw	fa0,28(sp)
     e5c:	65736963          	bltu	t1,s7,14ae <fontdata+0x582>
     e60:	796c                	flw	fa1,116(a0)
     e62:	2d20                	fld	fs0,88(a0)
     e64:	0000                	unimp
     e66:	0000                	unimp
     e68:	6168                	flw	fa0,68(a0)
     e6a:	6976                	flw	fs2,92(sp)
     e6c:	676e                	flw	fa4,216(sp)
     e6e:	6c20                	flw	fs0,88(s0)
     e70:	7469                	lui	s0,0xffffa
     e72:	6c74                	flw	fa3,92(s0)
     e74:	2065                	jal	f1c <main+0x634>
     e76:	6e20726f          	jal	tp,8558 <epaper.c.a43bb547+0x5d4e>
     e7a:	6f6d006f          	j	d1570 <epaper.c.a43bb547+0xced66>
     e7e:	656e                	flw	fa0,216(sp)
     e80:	2079                	jal	f0e <main+0x626>
     e82:	6e69                	lui	t3,0x1a
     e84:	6d20                	flw	fs0,88(a0)
     e86:	2079                	jal	f14 <main+0x62c>
     e88:	7570                	flw	fa2,108(a0)
     e8a:	7372                	flw	ft6,60(sp)
     e8c:	2e65                	jal	1244 <fontdata+0x318>
     e8e:	2e2e                	fld	ft8,200(sp)
     e90:	0000                	unimp
     e92:	0000                	unimp
     e94:	2f20                	fld	fs0,88(a4)
     e96:	5f5c                	lw	a5,60(a4)
     e98:	20205c2f          	0x20205c2f
     e9c:	2020                	fld	fs0,64(s0)
     e9e:	2020                	fld	fs0,64(s0)
     ea0:	2f5f5c2f          	0x2f5f5c2f
     ea4:	005c                	addi	a5,sp,4
     ea6:	0000                	unimp
     ea8:	2028                	fld	fa0,64(s0)
     eaa:	206f2e6f          	jal	t3,f30b0 <epaper.c.a43bb547+0xf08a6>
     eae:	2029                	jal	eb8 <main+0x5d0>
     eb0:	2020                	fld	fs0,64(s0)
     eb2:	2820                	fld	fs0,80(s0)
     eb4:	6f20                	flw	fs0,88(a4)
     eb6:	6f2e                	flw	ft10,200(sp)
     eb8:	2920                	fld	fs0,80(a0)
     eba:	0000                	unimp
     ebc:	3e20                	fld	fs0,120(a2)
     ebe:	5e20                	lw	s0,120(a2)
     ec0:	3c20                	fld	fs0,120(s0)
     ec2:	2020                	fld	fs0,64(s0)
     ec4:	2020                	fld	fs0,64(s0)
     ec6:	2020                	fld	fs0,64(s0)
     ec8:	203e                	fld	ft0,456(sp)
     eca:	205e                	fld	ft0,464(sp)
     ecc:	003c                	addi	a5,sp,8
     ece:	0000                	unimp
     ed0:	5f20                	lw	s0,120(a4)
     ed2:	5f2e                	lw	t5,232(sp)
     ed4:	2020                	fld	fs0,64(s0)
     ed6:	2020                	fld	fs0,64(s0)
     ed8:	5f20                	lw	s0,120(a4)
     eda:	2d2c                	fld	fa1,88(a0)
     edc:	60222227          	fsw	ft2,1540(tp) # ffff8604 <__global_pointer$+0xdfff7e04>
     ee0:	2e2d                	jal	121a <fontdata+0x2ee>
     ee2:	005f 2c28 2e2d      	0x2e2d2c28005f
     ee8:	2e60                	fld	fs0,216(a2)
     eea:	2c5f 2827 2020      	0x202028272c5f
     ef0:	2020                	fld	fs0,64(s0)
     ef2:	2020                	fld	fs0,64(s0)
     ef4:	7c20                	flw	fs0,120(s0)
     ef6:	605c                	flw	fa5,4(s0)
     ef8:	2f2d                	jal	1632 <fontdata+0x706>
     efa:	007c                	addi	a5,sp,12
     efc:	2020                	fld	fs0,64(s0)
     efe:	2020                	fld	fs0,64(s0)
     f00:	2d60                	fld	fs0,216(a0)
     f02:	2d2e                	fld	fs10,200(sp)
     f04:	205c2027          	fsw	ft5,512(s8)
     f08:	2d29                	jal	1522 <fontdata+0x5f6>
     f0a:	2860                	fld	fs0,208(s0)
     f0c:	2c20                	fld	fs0,88(s0)
     f0e:	6f20                	flw	fs0,88(a4)
     f10:	6f20                	flw	fs0,88(a4)
     f12:	0029                	c.nop	10
     f14:	2020                	fld	fs0,64(s0)
     f16:	2020                	fld	fs0,64(s0)
     f18:	2020                	fld	fs0,64(s0)
     f1a:	2020                	fld	fs0,64(s0)
     f1c:	2020                	fld	fs0,64(s0)
     f1e:	2d60                	fld	fs0,216(a0)
     f20:	2020                	fld	fs0,64(s0)
     f22:	2020                	fld	fs0,64(s0)
     f24:	605c                	flw	fa5,4(s0)
     f26:	605f 2722 002d      	0x2d2722605f

00000f2c <fontdata>:
     f2c:	0000 0000 0000 ff00 00ff 0000 0000 0000     ................
     f3c:	8080 8080 8080 8080 0101 0101 0101 0101     ................
     f4c:	3810 fe7c 387c 0010 7c38 fe38 d6fe 3810     .8|.|8..8|8....8
     f5c:	3810 fe7c 7cfe 3810 0000 3c18 183c 0000     .8|..|.8...<<...
     f6c:	ffff c3e7 e7c3 ffff 3c00 4266 6642 003c     .........<fBBf<.
     f7c:	c3ff bd99 99bd ffc3 070f 7d0f cccc 78cc     ...........}...x
     f8c:	663c 6666 183c 187e 333f 303f 7030 e0f0     <fff<.~.?3?00p..
     f9c:	637f 637f 6763 c0e6 db18 e73c 3ce7 18db     .c.ccg....<..<..
     fac:	e080 fef8 e0f8 0080 0e02 fe3e 0e3e 0002     ..........>.>...
     fbc:	3c18 187e 7e18 183c 6666 6666 0066 0066     .<~..~<.fffff.f.
     fcc:	db7f 7bdb 1b1b 001b 613e 663c 3c66 7c86     ...{....>a<ff<.|
     fdc:	0000 0000 7e7e 007e 3c18 187e 3c7e ff18     ....~~~..<~.~<..
     fec:	3c18 187e 1818 0018 1818 1818 3c7e 0018     .<~.........~<..
     ffc:	1800 fe0c 180c 0000 3000 fe60 3060 0000     .........0`.`0..
    100c:	0000 c0c0 fec0 0000 2400 ff66 2466 0000     .........$f.f$..
    101c:	1800 7e3c ffff 0000 ff00 7eff 183c 0000     ..<~.......~<...
	...
    1034:	3c18 183c 0018 0018 6666 0024 0000 0000     .<<.....ff$.....
    1044:	6c6c 6cfe 6cfe 006c 3e18 3c60 7c06 0018     ll.l.ll..>`<.|..
    1054:	c600 18cc 6630 00c6 6c38 7638 ccdc 0076     ....0f..8l8v..v.
    1064:	1818 0030 0000 0000 180c 3030 1830 000c     ..0.......000...
    1074:	1830 0c0c 180c 0030 6600 ff3c 663c 0000     0.....0..f<.<f..
    1084:	1800 7e18 1818 0000 0000 0000 1800 3018     ...~...........0
    1094:	0000 7e00 0000 0000 0000 0000 1800 0018     ...~............
    10a4:	0c06 3018 c060 0080 6c38 d6c6 6cc6 0038     ...0`...8l...l8.
    10b4:	3818 1818 1818 007e c67c 1c06 6630 00fe     .8....~.|...0f..
    10c4:	c67c 3c06 c606 007c 3c1c cc6c 0cfe 001e     |..<..|..<l.....
    10d4:	c0fe fcc0 c606 007c 6038 fcc0 c6c6 007c     ......|.8`....|.
    10e4:	c6fe 180c 3030 0030 c67c 7cc6 c6c6 007c     ....000.|..|..|.
    10f4:	c67c 7ec6 0c06 0078 1800 0018 1800 0018     |..~..x.........
    1104:	1800 0018 1800 3018 0c06 3018 0c18 0006     .......0...0....
    1114:	0000 007e 7e00 0000 3060 0c18 3018 0060     ..~..~..`0...0`.
    1124:	c67c 180c 0018 0018 c67c dede c0de 0078     |.......|.....x.
    1134:	6c38 fec6 c6c6 00c6 66fc 7c66 6666 00fc     8l.......ff|ff..
    1144:	663c c0c0 66c0 003c 6cf8 6666 6c66 00f8     <f...f<..lfffl..
    1154:	62fe 7868 6268 00fe 62fe 7868 6068 00f0     .bhxhb...bhxh`..
    1164:	663c c0c0 66ce 003a c6c6 fec6 c6c6 00c6     <f...f:.........
    1174:	183c 1818 1818 003c 0c1e 0c0c cccc 0078     <.....<.......x.
    1184:	66e6 786c 666c 00e6 60f0 6060 6662 00fe     .flxlf...```bf..
    1194:	eec6 fefe c6d6 00c6 e6c6 def6 c6ce 00c6     ................
    11a4:	c67c c6c6 c6c6 007c 66fc 7c66 6060 00f0     |.....|..ff|``..
    11b4:	c67c c6c6 cec6 0e7c 66fc 7c66 666c 00e6     |.....|..ff|lf..
    11c4:	663c 1830 660c 003c 7e7e 185a 1818 003c     <f0..f<.~~Z...<.
    11d4:	c6c6 c6c6 c6c6 007c c6c6 c6c6 6cc6 0038     ......|......l8.
    11e4:	c6c6 d6c6 fed6 006c c6c6 386c c66c 00c6     ......l...l8l...
    11f4:	6666 3c66 1818 003c c6fe 188c 6632 00fe     fff<..<.....2f..
    1204:	303c 3030 3030 003c 60c0 1830 060c 0002     <00000<..`0.....
    1214:	0c3c 0c0c 0c0c 003c 3810 c66c 0000 0000     <.....<..8l.....
    1224:	0000 0000 0000 ff00 1830 000c 0000 0000     ........0.......
    1234:	0000 0c78 cc7c 0076 60e0 667c 6666 00dc     ..x.|.v..`|fff..
    1244:	0000 c67c c6c0 007c 0c1c cc7c cccc 0076     ..|...|...|...v.
    1254:	0000 c67c c0fe 007c 663c f860 6060 00f0     ..|...|.<f`.``..
    1264:	0000 cc76 7ccc f80c 60e0 766c 6666 00e6     ..v..|...`lvff..
    1274:	0018 1838 1818 003c 0006 0606 6606 3c66     ..8...<......ff<
    1284:	60e0 6c66 6c78 00e6 1838 1818 1818 003c     .`flxl..8.....<.
    1294:	0000 feec d6d6 00d6 0000 66dc 6666 0066     ...........ffff.
    12a4:	0000 c67c c6c6 007c 0000 66dc 7c66 f060     ..|...|....ff|`.
    12b4:	0000 cc76 7ccc 1e0c 0000 76dc 6060 00f0     ..v..|.....v``..
    12c4:	0000 c07e 067c 00fc 3030 30fc 3630 001c     ..~.|...00.006..
    12d4:	0000 cccc cccc 0076 0000 c6c6 6cc6 0038     ......v......l8.
    12e4:	0000 d6c6 fed6 006c 0000 6cc6 6c38 00c6     ......l....l8l..
    12f4:	0000 c6c6 7ec6 fc06 0000 4c7e 3218 007e     .....~....~L.2~.
    1304:	180e 7018 1818 000e 1818 1818 1818 0018     ...p............
    1314:	1870 0e18 1818 0070 dc76 0000 0000 0000     p.....p.v.......
    1324:	1000 6c38 c6c6 00fe c67c c0c0 7cc6 780c     ..8l....|....|.x
    1334:	00cc cccc cccc 0076 180c c67c c0fe 007c     ......v...|...|.
    1344:	827c 0c78 cc7c 0076 00c6 0c78 cc7c 0076     |.x.|.v...x.|.v.
    1354:	1830 0c78 cc7c 0076 3030 0c78 cc7c 0076     0.x.|.v.00x.|.v.
    1364:	0000 c07e 7ec0 380c 827c c67c c0fe 007c     ..~..~.8|.|...|.
    1374:	00c6 c67c c0fe 007c 1830 c67c c0fe 007c     ..|...|.0.|...|.
    1384:	0066 1838 1818 003c 827c 1838 1818 003c     f.8...<.|.8...<.
    1394:	1830 3800 1818 003c 38c6 c66c c6fe 00c6     0..8..<..8l.....
    13a4:	6c38 c67c c6fe 00c6 3018 c0fe c0f8 00fe     8l|......0......
    13b4:	0000 187e d87e 007e 6c3e fecc cccc 00ce     ..~.~.~.>l......
    13c4:	827c c67c c6c6 007c 00c6 c67c c6c6 007c     |.|...|...|...|.
    13d4:	1830 c67c c6c6 007c 8478 cc00 cccc 0076     0.|...|.x.....v.
    13e4:	3060 cccc cccc 0076 00c6 c6c6 7ec6 fc06     `0....v......~..
    13f4:	38c6 c66c 6cc6 0038 00c6 c6c6 c6c6 007c     .8l..l8.......|.
    1404:	1818 c07e 7ec0 1818 6c38 f064 6660 00fc     ..~..~..8ld.`f..
    1414:	6666 7e3c 7e18 1818 ccf8 facc cfc6 c7c6     ff<~.~..........
    1424:	1b0e 3c18 d818 0070 3018 0c78 cc7c 0076     ...<..p..0x.|.v.
    1434:	180c 3800 1818 003c 180c c67c c6c6 007c     ...8..<...|...|.
    1444:	3018 cccc cccc 0076 dc76 dc00 6666 0066     .0....v.v...fff.
    1454:	dc76 e600 def6 00ce 6c3c 3e6c 7e00 0000     v.......<ll>.~..
    1464:	6c38 386c 7c00 0000 0018 1818 6330 003e     8ll8.|......0c>.
    1474:	0000 fe00 c0c0 0000 0000 fe00 0606 0000     ................
    1484:	e663 7e6c 6633 0fcc e663 7a6c 6a36 06df     c.l~3f..c.lz6j..
    1494:	0018 1818 3c3c 0018 3300 cc66 3366 0000     ....<<...3f.f3..
    14a4:	cc00 3366 cc66 0000 8822 8822 8822 8822     ..f3f...".".".".
    14b4:	aa55 aa55 aa55 aa55 dd77 dd77 dd77 dd77     U.U.U.U.w.w.w.w.
    14c4:	1818 1818 1818 1818 1818 1818 18f8 1818     ................
    14d4:	1818 18f8 18f8 1818 3636 3636 36f6 3636     ........6666.666
    14e4:	0000 0000 36fe 3636 0000 18f8 18f8 1818     .....666........
    14f4:	3636 06f6 36f6 3636 3636 3636 3636 3636     66...66666666666
    1504:	0000 06fe 36f6 3636 3636 06f6 00fe 0000     .....66666......
    1514:	3636 3636 00fe 0000 1818 18f8 00f8 0000     6666............
    1524:	0000 0000 18f8 1818 1818 1818 001f 0000     ................
    1534:	1818 1818 00ff 0000 0000 0000 18ff 1818     ................
    1544:	1818 1818 181f 1818 0000 0000 00ff 0000     ................
    1554:	1818 1818 18ff 1818 1818 181f 181f 1818     ................
    1564:	3636 3636 3637 3636 3636 3037 003f 0000     666676666670?...
    1574:	0000 303f 3637 3636 3636 00f7 00ff 0000     ..?0766666......
    1584:	0000 00ff 36f7 3636 3636 3037 3637 3636     .....66666707666
    1594:	0000 00ff 00ff 0000 3636 00f7 36f7 3636     ........66...666
    15a4:	1818 00ff 00ff 0000 3636 3636 00ff 0000     ........6666....
    15b4:	0000 00ff 18ff 1818 0000 0000 36ff 3636     .............666
    15c4:	3636 3636 003f 0000 1818 181f 001f 0000     6666?...........
    15d4:	0000 181f 181f 1818 0000 0000 363f 3636     ............?666
    15e4:	3636 3636 36ff 3636 1818 18ff 18ff 1818     6666.666........
    15f4:	1818 1818 00f8 0000 0000 0000 181f 1818     ................
    1604:	ffff ffff ffff ffff 0000 0000 ffff ffff     ................
    1614:	f0f0 f0f0 f0f0 f0f0 0f0f 0f0f 0f0f 0f0f     ................
    1624:	ffff ffff 0000 0000 0000 dc76 dcc8 0076     ..........v...v.
    1634:	cc78 d8cc c6cc 00cc c6fe c0c0 c0c0 00c0     x...............
    1644:	0000 6cfe 6c6c 006c c6fe 3060 c660 00fe     ...llll...`0`...
    1654:	0000 d87e d8d8 0070 0000 6666 6666 c07c     ..~...p...ffff|.
    1664:	7600 18dc 1818 0018 187e 663c 3c66 7e18     .v......~.<ff<.~
    1674:	6c38 fec6 6cc6 0038 6c38 c6c6 6c6c 00ee     8l...l8.8l..ll..
    1684:	180e 3e0c 6666 003c 0000 db7e 7edb 0000     ...>ff<...~..~..
    1694:	0c06 db7e 7edb c060 301e 7e60 3060 001e     ..~..~`..0`~`0..
    16a4:	7c00 c6c6 c6c6 00c6 fe00 fe00 fe00 0000     .|..............
    16b4:	1818 187e 0018 007e 1830 180c 0030 007e     ..~...~.0...0.~.
    16c4:	180c 1830 000c 007e 1b0e 181b 1818 1818     ..0...~.........
    16d4:	1818 1818 d818 70d8 1800 7e00 1800 0000     .......p...~....
    16e4:	7600 00dc dc76 0000 6c38 386c 0000 0000     .v..v...8ll8....
    16f4:	0000 1800 0018 0000 0000 1800 0000 0000     ................
    1704:	0c0f 0c0c 6cec 1c3c 366c 3636 0036 0000     .....l<.l6666...
    1714:	0c78 3018 007c 0000 0000 3c3c 3c3c 0000     x..0|.....<<<<..
	...
